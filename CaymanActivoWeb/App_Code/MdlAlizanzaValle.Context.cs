

//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class C5ALIANZAVALLE23102015Entities : DbContext
{
    public C5ALIANZAVALLE23102015Entities()
        : base("name=C5ALIANZAVALLE23102015Entities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<ACRESERVA> ACRESERVA { get; set; }

    public virtual DbSet<ACTA> ACTA { get; set; }

    public virtual DbSet<ACTIVO> ACTIVO { get; set; }

    public virtual DbSet<ANIO> ANIO { get; set; }

    public virtual DbSet<aspnet_Applications> aspnet_Applications { get; set; }

    public virtual DbSet<aspnet_Membership> aspnet_Membership { get; set; }

    public virtual DbSet<aspnet_Paths> aspnet_Paths { get; set; }

    public virtual DbSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers { get; set; }

    public virtual DbSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser { get; set; }

    public virtual DbSet<aspnet_Profile> aspnet_Profile { get; set; }

    public virtual DbSet<aspnet_Roles> aspnet_Roles { get; set; }

    public virtual DbSet<aspnet_SchemaVersions> aspnet_SchemaVersions { get; set; }

    public virtual DbSet<aspnet_Users> aspnet_Users { get; set; }

    public virtual DbSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events { get; set; }

    public virtual DbSet<CARACTERISTICA> CARACTERISTICA { get; set; }

    public virtual DbSet<CARGO> CARGO { get; set; }

    public virtual DbSet<CCAR> CCAR { get; set; }

    public virtual DbSet<CFAMILIA> CFAMILIA { get; set; }

    public virtual DbSet<CODIGO> CODIGO { get; set; }

    public virtual DbSet<CODIGOMASIVO> CODIGOMASIVO { get; set; }

    public virtual DbSet<COLOR> COLOR { get; set; }

    public virtual DbSet<CUSTODIO> CUSTODIO { get; set; }

    public virtual DbSet<DEPRECIACION> DEPRECIACION { get; set; }

    public virtual DbSet<DEPRECIACIONSRI> DEPRECIACIONSRI { get; set; }

    public virtual DbSet<DGENERADA> DGENERADA { get; set; }

    public virtual DbSet<DGENERADASRI> DGENERADASRI { get; set; }

    public virtual DbSet<EMPRESA> EMPRESA { get; set; }

    public virtual DbSet<ESTADO> ESTADO { get; set; }

    public virtual DbSet<ESTRUCOMP> ESTRUCOMP { get; set; }

    public virtual DbSet<GRUPO> GRUPO { get; set; }

    public virtual DbSet<GRUPOSRI> GRUPOSRI { get; set; }

    public virtual DbSet<HCODIGO> HCODIGO { get; set; }

    public virtual DbSet<HUCUSTODIO> HUCUSTODIO { get; set; }

    public virtual DbSet<INVALIDCREDENTIALSLOG> INVALIDCREDENTIALSLOG { get; set; }

    public virtual DbSet<MACTIVO> MACTIVO { get; set; }

    public virtual DbSet<MARCA> MARCA { get; set; }

    public virtual DbSet<MODELO> MODELO { get; set; }

    public virtual DbSet<MOVIMIENTO_RFID> MOVIMIENTO_RFID { get; set; }

    public virtual DbSet<PAIS> PAIS { get; set; }

    public virtual DbSet<PARAMETROS> PARAMETROS { get; set; }

    public virtual DbSet<POTENCIA_ANTENA> POTENCIA_ANTENA { get; set; }

    public virtual DbSet<PPC> PPC { get; set; }

    public virtual DbSet<PROVEEDOR> PROVEEDOR { get; set; }

    public virtual DbSet<REPORTE> REPORTE { get; set; }

    public virtual DbSet<ROLPPC> ROLPPC { get; set; }

    public virtual DbSet<TIPOMAN> TIPOMAN { get; set; }

    public virtual DbSet<UGEOGRAFICA> UGEOGRAFICA { get; set; }

    public virtual DbSet<UNIDAD> UNIDAD { get; set; }

    public virtual DbSet<UORGANICA> UORGANICA { get; set; }

    public virtual DbSet<USUPPC> USUPPC { get; set; }

    public virtual DbSet<XCUOR> XCUOR { get; set; }

    public virtual DbSet<HFOTO> HFOTO { get; set; }

    public virtual DbSet<Vista_Activos> Vista_Activos { get; set; }

    public virtual DbSet<vw_aspnet_Applications> vw_aspnet_Applications { get; set; }

    public virtual DbSet<vw_aspnet_MembershipUsers> vw_aspnet_MembershipUsers { get; set; }

    public virtual DbSet<vw_aspnet_Profiles> vw_aspnet_Profiles { get; set; }

    public virtual DbSet<vw_aspnet_Roles> vw_aspnet_Roles { get; set; }

    public virtual DbSet<vw_aspnet_Users> vw_aspnet_Users { get; set; }

    public virtual DbSet<vw_aspnet_UsersInRoles> vw_aspnet_UsersInRoles { get; set; }

    public virtual DbSet<vw_aspnet_WebPartState_Paths> vw_aspnet_WebPartState_Paths { get; set; }

    public virtual DbSet<vw_aspnet_WebPartState_Shared> vw_aspnet_WebPartState_Shared { get; set; }

    public virtual DbSet<vw_aspnet_WebPartState_User> vw_aspnet_WebPartState_User { get; set; }

    public virtual DbSet<TIPO_SEGURO> TIPO_SEGURO { get; set; }

    public virtual DbSet<HISTORIAL_PASSWORD> HISTORIAL_PASSWORD { get; set; }

    public virtual DbSet<BLOQUEO_PASSWORD> BLOQUEO_PASSWORD { get; set; }

    public virtual DbSet<MANTENIMIENTO> MANTENIMIENTO { get; set; }

    public virtual DbSet<DetalleModulo> DetalleModulo { get; set; }

    public virtual DbSet<Cabecera> Cabecera { get; set; }


    public virtual ObjectResult<ACTIVOPC01_Result> ACTIVOPC01()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ACTIVOPC01_Result>("ACTIVOPC01");
    }


    public virtual ObjectResult<ACTIVOPC02_Result> ACTIVOPC02(Nullable<System.DateTime> fechaini)
    {

        var fechainiParameter = fechaini.HasValue ?
            new ObjectParameter("fechaini", fechaini) :
            new ObjectParameter("fechaini", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ACTIVOPC02_Result>("ACTIVOPC02", fechainiParameter);
    }


    public virtual ObjectResult<Nullable<int>> ACTIVOPC03()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ACTIVOPC03");
    }


    public virtual int ACTIVOPC04(Nullable<int> cUS_ID)
    {

        var cUS_IDParameter = cUS_ID.HasValue ?
            new ObjectParameter("CUS_ID", cUS_ID) :
            new ObjectParameter("CUS_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ACTIVOPC04", cUS_IDParameter);
    }


    public virtual ObjectResult<string> aspnet_AnyDataInTables(Nullable<int> tablesToCheck)
    {

        var tablesToCheckParameter = tablesToCheck.HasValue ?
            new ObjectParameter("TablesToCheck", tablesToCheck) :
            new ObjectParameter("TablesToCheck", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_AnyDataInTables", tablesToCheckParameter);
    }


    public virtual int aspnet_Applications_CreateApplication(string applicationName, ObjectParameter applicationId)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Applications_CreateApplication", applicationNameParameter, applicationId);
    }


    public virtual int aspnet_CheckSchemaVersion(string feature, string compatibleSchemaVersion)
    {

        var featureParameter = feature != null ?
            new ObjectParameter("Feature", feature) :
            new ObjectParameter("Feature", typeof(string));


        var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
            new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
            new ObjectParameter("CompatibleSchemaVersion", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_CheckSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
    }


    public virtual int aspnet_Membership_ChangePasswordQuestionAndAnswer(string applicationName, string userName, string newPasswordQuestion, string newPasswordAnswer)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var newPasswordQuestionParameter = newPasswordQuestion != null ?
            new ObjectParameter("NewPasswordQuestion", newPasswordQuestion) :
            new ObjectParameter("NewPasswordQuestion", typeof(string));


        var newPasswordAnswerParameter = newPasswordAnswer != null ?
            new ObjectParameter("NewPasswordAnswer", newPasswordAnswer) :
            new ObjectParameter("NewPasswordAnswer", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ChangePasswordQuestionAndAnswer", applicationNameParameter, userNameParameter, newPasswordQuestionParameter, newPasswordAnswerParameter);
    }


    public virtual int aspnet_Membership_CreateUser(string applicationName, string userName, string password, string passwordSalt, string email, string passwordQuestion, string passwordAnswer, Nullable<bool> isApproved, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> createDate, Nullable<int> uniqueEmail, Nullable<int> passwordFormat, ObjectParameter userId)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        var passwordSaltParameter = passwordSalt != null ?
            new ObjectParameter("PasswordSalt", passwordSalt) :
            new ObjectParameter("PasswordSalt", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var passwordQuestionParameter = passwordQuestion != null ?
            new ObjectParameter("PasswordQuestion", passwordQuestion) :
            new ObjectParameter("PasswordQuestion", typeof(string));


        var passwordAnswerParameter = passwordAnswer != null ?
            new ObjectParameter("PasswordAnswer", passwordAnswer) :
            new ObjectParameter("PasswordAnswer", typeof(string));


        var isApprovedParameter = isApproved.HasValue ?
            new ObjectParameter("IsApproved", isApproved) :
            new ObjectParameter("IsApproved", typeof(bool));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        var createDateParameter = createDate.HasValue ?
            new ObjectParameter("CreateDate", createDate) :
            new ObjectParameter("CreateDate", typeof(System.DateTime));


        var uniqueEmailParameter = uniqueEmail.HasValue ?
            new ObjectParameter("UniqueEmail", uniqueEmail) :
            new ObjectParameter("UniqueEmail", typeof(int));


        var passwordFormatParameter = passwordFormat.HasValue ?
            new ObjectParameter("PasswordFormat", passwordFormat) :
            new ObjectParameter("PasswordFormat", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_CreateUser", applicationNameParameter, userNameParameter, passwordParameter, passwordSaltParameter, emailParameter, passwordQuestionParameter, passwordAnswerParameter, isApprovedParameter, currentTimeUtcParameter, createDateParameter, uniqueEmailParameter, passwordFormatParameter, userId);
    }


    public virtual int aspnet_Membership_FindUsersByEmail(string applicationName, string emailToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var emailToMatchParameter = emailToMatch != null ?
            new ObjectParameter("EmailToMatch", emailToMatch) :
            new ObjectParameter("EmailToMatch", typeof(string));


        var pageIndexParameter = pageIndex.HasValue ?
            new ObjectParameter("PageIndex", pageIndex) :
            new ObjectParameter("PageIndex", typeof(int));


        var pageSizeParameter = pageSize.HasValue ?
            new ObjectParameter("PageSize", pageSize) :
            new ObjectParameter("PageSize", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByEmail", applicationNameParameter, emailToMatchParameter, pageIndexParameter, pageSizeParameter);
    }


    public virtual int aspnet_Membership_FindUsersByName(string applicationName, string userNameToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameToMatchParameter = userNameToMatch != null ?
            new ObjectParameter("UserNameToMatch", userNameToMatch) :
            new ObjectParameter("UserNameToMatch", typeof(string));


        var pageIndexParameter = pageIndex.HasValue ?
            new ObjectParameter("PageIndex", pageIndex) :
            new ObjectParameter("PageIndex", typeof(int));


        var pageSizeParameter = pageSize.HasValue ?
            new ObjectParameter("PageSize", pageSize) :
            new ObjectParameter("PageSize", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByName", applicationNameParameter, userNameToMatchParameter, pageIndexParameter, pageSizeParameter);
    }


    public virtual int aspnet_Membership_GetAllUsers(string applicationName, Nullable<int> pageIndex, Nullable<int> pageSize)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var pageIndexParameter = pageIndex.HasValue ?
            new ObjectParameter("PageIndex", pageIndex) :
            new ObjectParameter("PageIndex", typeof(int));


        var pageSizeParameter = pageSize.HasValue ?
            new ObjectParameter("PageSize", pageSize) :
            new ObjectParameter("PageSize", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetAllUsers", applicationNameParameter, pageIndexParameter, pageSizeParameter);
    }


    public virtual int aspnet_Membership_GetNumberOfUsersOnline(string applicationName, Nullable<int> minutesSinceLastInActive, Nullable<System.DateTime> currentTimeUtc)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var minutesSinceLastInActiveParameter = minutesSinceLastInActive.HasValue ?
            new ObjectParameter("MinutesSinceLastInActive", minutesSinceLastInActive) :
            new ObjectParameter("MinutesSinceLastInActive", typeof(int));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetNumberOfUsersOnline", applicationNameParameter, minutesSinceLastInActiveParameter, currentTimeUtcParameter);
    }


    public virtual ObjectResult<aspnet_Membership_GetPassword_Result> aspnet_Membership_GetPassword(string applicationName, string userName, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, string passwordAnswer)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
            new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
            new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));


        var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
            new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
            new ObjectParameter("PasswordAttemptWindow", typeof(int));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        var passwordAnswerParameter = passwordAnswer != null ?
            new ObjectParameter("PasswordAnswer", passwordAnswer) :
            new ObjectParameter("PasswordAnswer", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPassword_Result>("aspnet_Membership_GetPassword", applicationNameParameter, userNameParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, passwordAnswerParameter);
    }


    public virtual ObjectResult<aspnet_Membership_GetPasswordWithFormat_Result> aspnet_Membership_GetPasswordWithFormat(string applicationName, string userName, Nullable<bool> updateLastLoginActivityDate, Nullable<System.DateTime> currentTimeUtc)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
            new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
            new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPasswordWithFormat_Result>("aspnet_Membership_GetPasswordWithFormat", applicationNameParameter, userNameParameter, updateLastLoginActivityDateParameter, currentTimeUtcParameter);
    }


    public virtual ObjectResult<string> aspnet_Membership_GetUserByEmail(string applicationName, string email)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Membership_GetUserByEmail", applicationNameParameter, emailParameter);
    }


    public virtual ObjectResult<aspnet_Membership_GetUserByName_Result> aspnet_Membership_GetUserByName(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        var updateLastActivityParameter = updateLastActivity.HasValue ?
            new ObjectParameter("UpdateLastActivity", updateLastActivity) :
            new ObjectParameter("UpdateLastActivity", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByName_Result>("aspnet_Membership_GetUserByName", applicationNameParameter, userNameParameter, currentTimeUtcParameter, updateLastActivityParameter);
    }


    public virtual ObjectResult<aspnet_Membership_GetUserByUserId_Result> aspnet_Membership_GetUserByUserId(Nullable<System.Guid> userId, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
    {

        var userIdParameter = userId.HasValue ?
            new ObjectParameter("UserId", userId) :
            new ObjectParameter("UserId", typeof(System.Guid));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        var updateLastActivityParameter = updateLastActivity.HasValue ?
            new ObjectParameter("UpdateLastActivity", updateLastActivity) :
            new ObjectParameter("UpdateLastActivity", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByUserId_Result>("aspnet_Membership_GetUserByUserId", userIdParameter, currentTimeUtcParameter, updateLastActivityParameter);
    }


    public virtual int aspnet_Membership_ResetPassword(string applicationName, string userName, string newPassword, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat, string passwordAnswer)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var newPasswordParameter = newPassword != null ?
            new ObjectParameter("NewPassword", newPassword) :
            new ObjectParameter("NewPassword", typeof(string));


        var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
            new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
            new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));


        var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
            new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
            new ObjectParameter("PasswordAttemptWindow", typeof(int));


        var passwordSaltParameter = passwordSalt != null ?
            new ObjectParameter("PasswordSalt", passwordSalt) :
            new ObjectParameter("PasswordSalt", typeof(string));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        var passwordFormatParameter = passwordFormat.HasValue ?
            new ObjectParameter("PasswordFormat", passwordFormat) :
            new ObjectParameter("PasswordFormat", typeof(int));


        var passwordAnswerParameter = passwordAnswer != null ?
            new ObjectParameter("PasswordAnswer", passwordAnswer) :
            new ObjectParameter("PasswordAnswer", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ResetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter, passwordAnswerParameter);
    }


    public virtual int aspnet_Membership_SetPassword(string applicationName, string userName, string newPassword, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var newPasswordParameter = newPassword != null ?
            new ObjectParameter("NewPassword", newPassword) :
            new ObjectParameter("NewPassword", typeof(string));


        var passwordSaltParameter = passwordSalt != null ?
            new ObjectParameter("PasswordSalt", passwordSalt) :
            new ObjectParameter("PasswordSalt", typeof(string));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        var passwordFormatParameter = passwordFormat.HasValue ?
            new ObjectParameter("PasswordFormat", passwordFormat) :
            new ObjectParameter("PasswordFormat", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_SetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter);
    }


    public virtual int aspnet_Membership_UnlockUser(string applicationName, string userName)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UnlockUser", applicationNameParameter, userNameParameter);
    }


    public virtual int aspnet_Membership_UpdateUser(string applicationName, string userName, string email, string comment, Nullable<bool> isApproved, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate, Nullable<int> uniqueEmail, Nullable<System.DateTime> currentTimeUtc)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var commentParameter = comment != null ?
            new ObjectParameter("Comment", comment) :
            new ObjectParameter("Comment", typeof(string));


        var isApprovedParameter = isApproved.HasValue ?
            new ObjectParameter("IsApproved", isApproved) :
            new ObjectParameter("IsApproved", typeof(bool));


        var lastLoginDateParameter = lastLoginDate.HasValue ?
            new ObjectParameter("LastLoginDate", lastLoginDate) :
            new ObjectParameter("LastLoginDate", typeof(System.DateTime));


        var lastActivityDateParameter = lastActivityDate.HasValue ?
            new ObjectParameter("LastActivityDate", lastActivityDate) :
            new ObjectParameter("LastActivityDate", typeof(System.DateTime));


        var uniqueEmailParameter = uniqueEmail.HasValue ?
            new ObjectParameter("UniqueEmail", uniqueEmail) :
            new ObjectParameter("UniqueEmail", typeof(int));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUser", applicationNameParameter, userNameParameter, emailParameter, commentParameter, isApprovedParameter, lastLoginDateParameter, lastActivityDateParameter, uniqueEmailParameter, currentTimeUtcParameter);
    }


    public virtual int aspnet_Membership_UpdateUserInfo(string applicationName, string userName, Nullable<bool> isPasswordCorrect, Nullable<bool> updateLastLoginActivityDate, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var isPasswordCorrectParameter = isPasswordCorrect.HasValue ?
            new ObjectParameter("IsPasswordCorrect", isPasswordCorrect) :
            new ObjectParameter("IsPasswordCorrect", typeof(bool));


        var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
            new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
            new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));


        var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
            new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
            new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));


        var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
            new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
            new ObjectParameter("PasswordAttemptWindow", typeof(int));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        var lastLoginDateParameter = lastLoginDate.HasValue ?
            new ObjectParameter("LastLoginDate", lastLoginDate) :
            new ObjectParameter("LastLoginDate", typeof(System.DateTime));


        var lastActivityDateParameter = lastActivityDate.HasValue ?
            new ObjectParameter("LastActivityDate", lastActivityDate) :
            new ObjectParameter("LastActivityDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUserInfo", applicationNameParameter, userNameParameter, isPasswordCorrectParameter, updateLastLoginActivityDateParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, lastLoginDateParameter, lastActivityDateParameter);
    }


    public virtual int aspnet_Paths_CreatePath(Nullable<System.Guid> applicationId, string path, ObjectParameter pathId)
    {

        var applicationIdParameter = applicationId.HasValue ?
            new ObjectParameter("ApplicationId", applicationId) :
            new ObjectParameter("ApplicationId", typeof(System.Guid));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Paths_CreatePath", applicationIdParameter, pathParameter, pathId);
    }


    public virtual int aspnet_Personalization_GetApplicationId(string applicationName, ObjectParameter applicationId)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Personalization_GetApplicationId", applicationNameParameter, applicationId);
    }


    public virtual int aspnet_PersonalizationAdministration_DeleteAllState(Nullable<bool> allUsersScope, string applicationName, ObjectParameter count)
    {

        var allUsersScopeParameter = allUsersScope.HasValue ?
            new ObjectParameter("AllUsersScope", allUsersScope) :
            new ObjectParameter("AllUsersScope", typeof(bool));


        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_DeleteAllState", allUsersScopeParameter, applicationNameParameter, count);
    }


    public virtual int aspnet_PersonalizationAdministration_FindState(Nullable<bool> allUsersScope, string applicationName, Nullable<int> pageIndex, Nullable<int> pageSize, string path, string userName, Nullable<System.DateTime> inactiveSinceDate)
    {

        var allUsersScopeParameter = allUsersScope.HasValue ?
            new ObjectParameter("AllUsersScope", allUsersScope) :
            new ObjectParameter("AllUsersScope", typeof(bool));


        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var pageIndexParameter = pageIndex.HasValue ?
            new ObjectParameter("PageIndex", pageIndex) :
            new ObjectParameter("PageIndex", typeof(int));


        var pageSizeParameter = pageSize.HasValue ?
            new ObjectParameter("PageSize", pageSize) :
            new ObjectParameter("PageSize", typeof(int));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
            new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
            new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_FindState", allUsersScopeParameter, applicationNameParameter, pageIndexParameter, pageSizeParameter, pathParameter, userNameParameter, inactiveSinceDateParameter);
    }


    public virtual int aspnet_PersonalizationAdministration_GetCountOfState(ObjectParameter count, Nullable<bool> allUsersScope, string applicationName, string path, string userName, Nullable<System.DateTime> inactiveSinceDate)
    {

        var allUsersScopeParameter = allUsersScope.HasValue ?
            new ObjectParameter("AllUsersScope", allUsersScope) :
            new ObjectParameter("AllUsersScope", typeof(bool));


        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
            new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
            new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_GetCountOfState", count, allUsersScopeParameter, applicationNameParameter, pathParameter, userNameParameter, inactiveSinceDateParameter);
    }


    public virtual int aspnet_PersonalizationAdministration_ResetSharedState(ObjectParameter count, string applicationName, string path)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_ResetSharedState", count, applicationNameParameter, pathParameter);
    }


    public virtual int aspnet_PersonalizationAdministration_ResetUserState(ObjectParameter count, string applicationName, Nullable<System.DateTime> inactiveSinceDate, string userName, string path)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
            new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
            new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_ResetUserState", count, applicationNameParameter, inactiveSinceDateParameter, userNameParameter, pathParameter);
    }


    public virtual ObjectResult<byte[]> aspnet_PersonalizationAllUsers_GetPageSettings(string applicationName, string path)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("aspnet_PersonalizationAllUsers_GetPageSettings", applicationNameParameter, pathParameter);
    }


    public virtual int aspnet_PersonalizationAllUsers_ResetPageSettings(string applicationName, string path)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAllUsers_ResetPageSettings", applicationNameParameter, pathParameter);
    }


    public virtual int aspnet_PersonalizationAllUsers_SetPageSettings(string applicationName, string path, byte[] pageSettings, Nullable<System.DateTime> currentTimeUtc)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        var pageSettingsParameter = pageSettings != null ?
            new ObjectParameter("PageSettings", pageSettings) :
            new ObjectParameter("PageSettings", typeof(byte[]));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAllUsers_SetPageSettings", applicationNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
    }


    public virtual ObjectResult<byte[]> aspnet_PersonalizationPerUser_GetPageSettings(string applicationName, string userName, string path, Nullable<System.DateTime> currentTimeUtc)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("aspnet_PersonalizationPerUser_GetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
    }


    public virtual int aspnet_PersonalizationPerUser_ResetPageSettings(string applicationName, string userName, string path, Nullable<System.DateTime> currentTimeUtc)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationPerUser_ResetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
    }


    public virtual int aspnet_PersonalizationPerUser_SetPageSettings(string applicationName, string userName, string path, byte[] pageSettings, Nullable<System.DateTime> currentTimeUtc)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        var pageSettingsParameter = pageSettings != null ?
            new ObjectParameter("PageSettings", pageSettings) :
            new ObjectParameter("PageSettings", typeof(byte[]));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationPerUser_SetPageSettings", applicationNameParameter, userNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
    }


    public virtual ObjectResult<Nullable<int>> aspnet_Profile_DeleteInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
            new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
            new ObjectParameter("ProfileAuthOptions", typeof(int));


        var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
            new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
            new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_DeleteInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
    }


    public virtual ObjectResult<Nullable<int>> aspnet_Profile_DeleteProfiles(string applicationName, string userNames)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNamesParameter = userNames != null ?
            new ObjectParameter("UserNames", userNames) :
            new ObjectParameter("UserNames", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_DeleteProfiles", applicationNameParameter, userNamesParameter);
    }


    public virtual ObjectResult<Nullable<int>> aspnet_Profile_GetNumberOfInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
            new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
            new ObjectParameter("ProfileAuthOptions", typeof(int));


        var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
            new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
            new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_GetNumberOfInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
    }


    public virtual int aspnet_Profile_GetProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<int> pageIndex, Nullable<int> pageSize, string userNameToMatch, Nullable<System.DateTime> inactiveSinceDate)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
            new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
            new ObjectParameter("ProfileAuthOptions", typeof(int));


        var pageIndexParameter = pageIndex.HasValue ?
            new ObjectParameter("PageIndex", pageIndex) :
            new ObjectParameter("PageIndex", typeof(int));


        var pageSizeParameter = pageSize.HasValue ?
            new ObjectParameter("PageSize", pageSize) :
            new ObjectParameter("PageSize", typeof(int));


        var userNameToMatchParameter = userNameToMatch != null ?
            new ObjectParameter("UserNameToMatch", userNameToMatch) :
            new ObjectParameter("UserNameToMatch", typeof(string));


        var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
            new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
            new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_GetProfiles", applicationNameParameter, profileAuthOptionsParameter, pageIndexParameter, pageSizeParameter, userNameToMatchParameter, inactiveSinceDateParameter);
    }


    public virtual ObjectResult<aspnet_Profile_GetProperties_Result> aspnet_Profile_GetProperties(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Profile_GetProperties_Result>("aspnet_Profile_GetProperties", applicationNameParameter, userNameParameter, currentTimeUtcParameter);
    }


    public virtual int aspnet_Profile_SetProperties(string applicationName, string propertyNames, string propertyValuesString, byte[] propertyValuesBinary, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> currentTimeUtc)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var propertyNamesParameter = propertyNames != null ?
            new ObjectParameter("PropertyNames", propertyNames) :
            new ObjectParameter("PropertyNames", typeof(string));


        var propertyValuesStringParameter = propertyValuesString != null ?
            new ObjectParameter("PropertyValuesString", propertyValuesString) :
            new ObjectParameter("PropertyValuesString", typeof(string));


        var propertyValuesBinaryParameter = propertyValuesBinary != null ?
            new ObjectParameter("PropertyValuesBinary", propertyValuesBinary) :
            new ObjectParameter("PropertyValuesBinary", typeof(byte[]));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var isUserAnonymousParameter = isUserAnonymous.HasValue ?
            new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
            new ObjectParameter("IsUserAnonymous", typeof(bool));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_SetProperties", applicationNameParameter, propertyNamesParameter, propertyValuesStringParameter, propertyValuesBinaryParameter, userNameParameter, isUserAnonymousParameter, currentTimeUtcParameter);
    }


    public virtual int aspnet_RegisterSchemaVersion(string feature, string compatibleSchemaVersion, Nullable<bool> isCurrentVersion, Nullable<bool> removeIncompatibleSchema)
    {

        var featureParameter = feature != null ?
            new ObjectParameter("Feature", feature) :
            new ObjectParameter("Feature", typeof(string));


        var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
            new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
            new ObjectParameter("CompatibleSchemaVersion", typeof(string));


        var isCurrentVersionParameter = isCurrentVersion.HasValue ?
            new ObjectParameter("IsCurrentVersion", isCurrentVersion) :
            new ObjectParameter("IsCurrentVersion", typeof(bool));


        var removeIncompatibleSchemaParameter = removeIncompatibleSchema.HasValue ?
            new ObjectParameter("RemoveIncompatibleSchema", removeIncompatibleSchema) :
            new ObjectParameter("RemoveIncompatibleSchema", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_RegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter, isCurrentVersionParameter, removeIncompatibleSchemaParameter);
    }


    public virtual int aspnet_Roles_CreateRole(string applicationName, string roleName)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var roleNameParameter = roleName != null ?
            new ObjectParameter("RoleName", roleName) :
            new ObjectParameter("RoleName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_CreateRole", applicationNameParameter, roleNameParameter);
    }


    public virtual int aspnet_Roles_DeleteRole(string applicationName, string roleName, Nullable<bool> deleteOnlyIfRoleIsEmpty)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var roleNameParameter = roleName != null ?
            new ObjectParameter("RoleName", roleName) :
            new ObjectParameter("RoleName", typeof(string));


        var deleteOnlyIfRoleIsEmptyParameter = deleteOnlyIfRoleIsEmpty.HasValue ?
            new ObjectParameter("DeleteOnlyIfRoleIsEmpty", deleteOnlyIfRoleIsEmpty) :
            new ObjectParameter("DeleteOnlyIfRoleIsEmpty", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_DeleteRole", applicationNameParameter, roleNameParameter, deleteOnlyIfRoleIsEmptyParameter);
    }


    public virtual ObjectResult<string> aspnet_Roles_GetAllRoles(string applicationName)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Roles_GetAllRoles", applicationNameParameter);
    }


    public virtual int aspnet_Roles_RoleExists(string applicationName, string roleName)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var roleNameParameter = roleName != null ?
            new ObjectParameter("RoleName", roleName) :
            new ObjectParameter("RoleName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_RoleExists", applicationNameParameter, roleNameParameter);
    }


    public virtual int aspnet_Setup_RemoveAllRoleMembers(string name)
    {

        var nameParameter = name != null ?
            new ObjectParameter("name", name) :
            new ObjectParameter("name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Setup_RemoveAllRoleMembers", nameParameter);
    }


    public virtual int aspnet_Setup_RestorePermissions(string name)
    {

        var nameParameter = name != null ?
            new ObjectParameter("name", name) :
            new ObjectParameter("name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Setup_RestorePermissions", nameParameter);
    }


    public virtual int aspnet_UnRegisterSchemaVersion(string feature, string compatibleSchemaVersion)
    {

        var featureParameter = feature != null ?
            new ObjectParameter("Feature", feature) :
            new ObjectParameter("Feature", typeof(string));


        var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
            new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
            new ObjectParameter("CompatibleSchemaVersion", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UnRegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
    }


    public virtual int aspnet_Users_CreateUser(Nullable<System.Guid> applicationId, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> lastActivityDate, ObjectParameter userId)
    {

        var applicationIdParameter = applicationId.HasValue ?
            new ObjectParameter("ApplicationId", applicationId) :
            new ObjectParameter("ApplicationId", typeof(System.Guid));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var isUserAnonymousParameter = isUserAnonymous.HasValue ?
            new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
            new ObjectParameter("IsUserAnonymous", typeof(bool));


        var lastActivityDateParameter = lastActivityDate.HasValue ?
            new ObjectParameter("LastActivityDate", lastActivityDate) :
            new ObjectParameter("LastActivityDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_CreateUser", applicationIdParameter, userNameParameter, isUserAnonymousParameter, lastActivityDateParameter, userId);
    }


    public virtual int aspnet_Users_DeleteUser(string applicationName, string userName, Nullable<int> tablesToDeleteFrom, ObjectParameter numTablesDeletedFrom)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var tablesToDeleteFromParameter = tablesToDeleteFrom.HasValue ?
            new ObjectParameter("TablesToDeleteFrom", tablesToDeleteFrom) :
            new ObjectParameter("TablesToDeleteFrom", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_DeleteUser", applicationNameParameter, userNameParameter, tablesToDeleteFromParameter, numTablesDeletedFrom);
    }


    public virtual ObjectResult<string> aspnet_UsersInRoles_AddUsersToRoles(string applicationName, string userNames, string roleNames, Nullable<System.DateTime> currentTimeUtc)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNamesParameter = userNames != null ?
            new ObjectParameter("UserNames", userNames) :
            new ObjectParameter("UserNames", typeof(string));


        var roleNamesParameter = roleNames != null ?
            new ObjectParameter("RoleNames", roleNames) :
            new ObjectParameter("RoleNames", typeof(string));


        var currentTimeUtcParameter = currentTimeUtc.HasValue ?
            new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
            new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_AddUsersToRoles", applicationNameParameter, userNamesParameter, roleNamesParameter, currentTimeUtcParameter);
    }


    public virtual ObjectResult<string> aspnet_UsersInRoles_FindUsersInRole(string applicationName, string roleName, string userNameToMatch)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var roleNameParameter = roleName != null ?
            new ObjectParameter("RoleName", roleName) :
            new ObjectParameter("RoleName", typeof(string));


        var userNameToMatchParameter = userNameToMatch != null ?
            new ObjectParameter("UserNameToMatch", userNameToMatch) :
            new ObjectParameter("UserNameToMatch", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_FindUsersInRole", applicationNameParameter, roleNameParameter, userNameToMatchParameter);
    }


    public virtual ObjectResult<string> aspnet_UsersInRoles_GetRolesForUser(string applicationName, string userName)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetRolesForUser", applicationNameParameter, userNameParameter);
    }


    public virtual ObjectResult<string> aspnet_UsersInRoles_GetUsersInRoles(string applicationName, string roleName)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var roleNameParameter = roleName != null ?
            new ObjectParameter("RoleName", roleName) :
            new ObjectParameter("RoleName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetUsersInRoles", applicationNameParameter, roleNameParameter);
    }


    public virtual int aspnet_UsersInRoles_IsUserInRole(string applicationName, string userName, string roleName)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var roleNameParameter = roleName != null ?
            new ObjectParameter("RoleName", roleName) :
            new ObjectParameter("RoleName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UsersInRoles_IsUserInRole", applicationNameParameter, userNameParameter, roleNameParameter);
    }


    public virtual ObjectResult<aspnet_UsersInRoles_RemoveUsersFromRoles_Result> aspnet_UsersInRoles_RemoveUsersFromRoles(string applicationName, string userNames, string roleNames)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNamesParameter = userNames != null ?
            new ObjectParameter("UserNames", userNames) :
            new ObjectParameter("UserNames", typeof(string));


        var roleNamesParameter = roleNames != null ?
            new ObjectParameter("RoleNames", roleNames) :
            new ObjectParameter("RoleNames", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_UsersInRoles_RemoveUsersFromRoles_Result>("aspnet_UsersInRoles_RemoveUsersFromRoles", applicationNameParameter, userNamesParameter, roleNamesParameter);
    }


    public virtual int aspnet_WebEvent_LogEvent(string eventId, Nullable<System.DateTime> eventTimeUtc, Nullable<System.DateTime> eventTime, string eventType, Nullable<decimal> eventSequence, Nullable<decimal> eventOccurrence, Nullable<int> eventCode, Nullable<int> eventDetailCode, string message, string applicationPath, string applicationVirtualPath, string machineName, string requestUrl, string exceptionType, string details)
    {

        var eventIdParameter = eventId != null ?
            new ObjectParameter("EventId", eventId) :
            new ObjectParameter("EventId", typeof(string));


        var eventTimeUtcParameter = eventTimeUtc.HasValue ?
            new ObjectParameter("EventTimeUtc", eventTimeUtc) :
            new ObjectParameter("EventTimeUtc", typeof(System.DateTime));


        var eventTimeParameter = eventTime.HasValue ?
            new ObjectParameter("EventTime", eventTime) :
            new ObjectParameter("EventTime", typeof(System.DateTime));


        var eventTypeParameter = eventType != null ?
            new ObjectParameter("EventType", eventType) :
            new ObjectParameter("EventType", typeof(string));


        var eventSequenceParameter = eventSequence.HasValue ?
            new ObjectParameter("EventSequence", eventSequence) :
            new ObjectParameter("EventSequence", typeof(decimal));


        var eventOccurrenceParameter = eventOccurrence.HasValue ?
            new ObjectParameter("EventOccurrence", eventOccurrence) :
            new ObjectParameter("EventOccurrence", typeof(decimal));


        var eventCodeParameter = eventCode.HasValue ?
            new ObjectParameter("EventCode", eventCode) :
            new ObjectParameter("EventCode", typeof(int));


        var eventDetailCodeParameter = eventDetailCode.HasValue ?
            new ObjectParameter("EventDetailCode", eventDetailCode) :
            new ObjectParameter("EventDetailCode", typeof(int));


        var messageParameter = message != null ?
            new ObjectParameter("Message", message) :
            new ObjectParameter("Message", typeof(string));


        var applicationPathParameter = applicationPath != null ?
            new ObjectParameter("ApplicationPath", applicationPath) :
            new ObjectParameter("ApplicationPath", typeof(string));


        var applicationVirtualPathParameter = applicationVirtualPath != null ?
            new ObjectParameter("ApplicationVirtualPath", applicationVirtualPath) :
            new ObjectParameter("ApplicationVirtualPath", typeof(string));


        var machineNameParameter = machineName != null ?
            new ObjectParameter("MachineName", machineName) :
            new ObjectParameter("MachineName", typeof(string));


        var requestUrlParameter = requestUrl != null ?
            new ObjectParameter("RequestUrl", requestUrl) :
            new ObjectParameter("RequestUrl", typeof(string));


        var exceptionTypeParameter = exceptionType != null ?
            new ObjectParameter("ExceptionType", exceptionType) :
            new ObjectParameter("ExceptionType", typeof(string));


        var detailsParameter = details != null ?
            new ObjectParameter("Details", details) :
            new ObjectParameter("Details", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_WebEvent_LogEvent", eventIdParameter, eventTimeUtcParameter, eventTimeParameter, eventTypeParameter, eventSequenceParameter, eventOccurrenceParameter, eventCodeParameter, eventDetailCodeParameter, messageParameter, applicationPathParameter, applicationVirtualPathParameter, machineNameParameter, requestUrlParameter, exceptionTypeParameter, detailsParameter);
    }


    public virtual int ELIMINA_ACTIVO(Nullable<int> aCT_ID)
    {

        var aCT_IDParameter = aCT_ID.HasValue ?
            new ObjectParameter("ACT_ID", aCT_ID) :
            new ObjectParameter("ACT_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELIMINA_ACTIVO", aCT_IDParameter);
    }


    public virtual int ELIMINA_ACTIVO1(string act_codbarras)
    {

        var act_codbarrasParameter = act_codbarras != null ?
            new ObjectParameter("act_codbarras", act_codbarras) :
            new ObjectParameter("act_codbarras", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELIMINA_ACTIVO1", act_codbarrasParameter);
    }


    public virtual ObjectResult<LECTURA_MOVIMIENTOSPC01_Result> LECTURA_MOVIMIENTOSPC01(Nullable<int> oP, string cODIGO, string tIPO, Nullable<System.DateTime> fECHA_INI, Nullable<System.DateTime> fECHA_FIN)
    {

        var oPParameter = oP.HasValue ?
            new ObjectParameter("OP", oP) :
            new ObjectParameter("OP", typeof(int));


        var cODIGOParameter = cODIGO != null ?
            new ObjectParameter("CODIGO", cODIGO) :
            new ObjectParameter("CODIGO", typeof(string));


        var tIPOParameter = tIPO != null ?
            new ObjectParameter("TIPO", tIPO) :
            new ObjectParameter("TIPO", typeof(string));


        var fECHA_INIParameter = fECHA_INI.HasValue ?
            new ObjectParameter("FECHA_INI", fECHA_INI) :
            new ObjectParameter("FECHA_INI", typeof(System.DateTime));


        var fECHA_FINParameter = fECHA_FIN.HasValue ?
            new ObjectParameter("FECHA_FIN", fECHA_FIN) :
            new ObjectParameter("FECHA_FIN", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LECTURA_MOVIMIENTOSPC01_Result>("LECTURA_MOVIMIENTOSPC01", oPParameter, cODIGOParameter, tIPOParameter, fECHA_INIParameter, fECHA_FINParameter);
    }


    public virtual ObjectResult<PARAMETROSPC01_Result> PARAMETROSPC01(string par_nombre)
    {

        var par_nombreParameter = par_nombre != null ?
            new ObjectParameter("par_nombre", par_nombre) :
            new ObjectParameter("par_nombre", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PARAMETROSPC01_Result>("PARAMETROSPC01", par_nombreParameter);
    }


    public virtual ObjectResult<REPORTEMOVILPC01_Result> REPORTEMOVILPC01(Nullable<int> oP)
    {

        var oPParameter = oP.HasValue ?
            new ObjectParameter("OP", oP) :
            new ObjectParameter("OP", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REPORTEMOVILPC01_Result>("REPORTEMOVILPC01", oPParameter);
    }


    public virtual int us_ReporteGlobalACTIVO()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("us_ReporteGlobalACTIVO");
    }


    public virtual int usp_BackupBddALL(string ruta, string @base)
    {

        var rutaParameter = ruta != null ?
            new ObjectParameter("ruta", ruta) :
            new ObjectParameter("ruta", typeof(string));


        var baseParameter = @base != null ?
            new ObjectParameter("base", @base) :
            new ObjectParameter("base", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BackupBddALL", rutaParameter, baseParameter);
    }


    public virtual int usp_BajaACTIVO(Nullable<int> aCT_ID, string aCT_TIPO, string uSERNAME, Nullable<System.DateTime> aCT_FECHABAJA, Nullable<int> aCT_TIPOBAJA, string aCT_OBSBAJA, ObjectParameter err)
    {

        var aCT_IDParameter = aCT_ID.HasValue ?
            new ObjectParameter("ACT_ID", aCT_ID) :
            new ObjectParameter("ACT_ID", typeof(int));


        var aCT_TIPOParameter = aCT_TIPO != null ?
            new ObjectParameter("ACT_TIPO", aCT_TIPO) :
            new ObjectParameter("ACT_TIPO", typeof(string));


        var uSERNAMEParameter = uSERNAME != null ?
            new ObjectParameter("USERNAME", uSERNAME) :
            new ObjectParameter("USERNAME", typeof(string));


        var aCT_FECHABAJAParameter = aCT_FECHABAJA.HasValue ?
            new ObjectParameter("ACT_FECHABAJA", aCT_FECHABAJA) :
            new ObjectParameter("ACT_FECHABAJA", typeof(System.DateTime));


        var aCT_TIPOBAJAParameter = aCT_TIPOBAJA.HasValue ?
            new ObjectParameter("ACT_TIPOBAJA", aCT_TIPOBAJA) :
            new ObjectParameter("ACT_TIPOBAJA", typeof(int));


        var aCT_OBSBAJAParameter = aCT_OBSBAJA != null ?
            new ObjectParameter("ACT_OBSBAJA", aCT_OBSBAJA) :
            new ObjectParameter("ACT_OBSBAJA", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BajaACTIVO", aCT_IDParameter, aCT_TIPOParameter, uSERNAMEParameter, aCT_FECHABAJAParameter, aCT_TIPOBAJAParameter, aCT_OBSBAJAParameter, err);
    }


    public virtual int usp_CambiaEstadoAutActivo(string codbarras, Nullable<int> estado, ObjectParameter err)
    {

        var codbarrasParameter = codbarras != null ?
            new ObjectParameter("codbarras", codbarras) :
            new ObjectParameter("codbarras", typeof(string));


        var estadoParameter = estado.HasValue ?
            new ObjectParameter("estado", estado) :
            new ObjectParameter("estado", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CambiaEstadoAutActivo", codbarrasParameter, estadoParameter, err);
    }


    public virtual int usp_CambiaEstadoAutFiltro(string codbarras, Nullable<int> estado, ObjectParameter err)
    {

        var codbarrasParameter = codbarras != null ?
            new ObjectParameter("codbarras", codbarras) :
            new ObjectParameter("codbarras", typeof(string));


        var estadoParameter = estado.HasValue ?
            new ObjectParameter("estado", estado) :
            new ObjectParameter("estado", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CambiaEstadoAutFiltro", codbarrasParameter, estadoParameter, err);
    }


    public virtual int usp_delGRUPO(Nullable<int> gRU_ID1, ObjectParameter err)
    {

        var gRU_ID1Parameter = gRU_ID1.HasValue ?
            new ObjectParameter("GRU_ID1", gRU_ID1) :
            new ObjectParameter("GRU_ID1", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delGRUPO", gRU_ID1Parameter, err);
    }


    public virtual int usp_delGRUPO2(Nullable<int> gRU_ID2, ObjectParameter err)
    {

        var gRU_ID2Parameter = gRU_ID2.HasValue ?
            new ObjectParameter("GRU_ID2", gRU_ID2) :
            new ObjectParameter("GRU_ID2", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delGRUPO2", gRU_ID2Parameter, err);
    }


    public virtual int usp_delGRUPO3(Nullable<int> gRU_ID3, ObjectParameter err)
    {

        var gRU_ID3Parameter = gRU_ID3.HasValue ?
            new ObjectParameter("GRU_ID3", gRU_ID3) :
            new ObjectParameter("GRU_ID3", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delGRUPO3", gRU_ID3Parameter, err);
    }


    public virtual int usp_delUGEOGRAFICA(Nullable<int> uGE_ID1, ObjectParameter err)
    {

        var uGE_ID1Parameter = uGE_ID1.HasValue ?
            new ObjectParameter("UGE_ID1", uGE_ID1) :
            new ObjectParameter("UGE_ID1", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delUGEOGRAFICA", uGE_ID1Parameter, err);
    }


    public virtual int usp_delUGEOGRAFICA2(Nullable<int> uGE_ID2, ObjectParameter err)
    {

        var uGE_ID2Parameter = uGE_ID2.HasValue ?
            new ObjectParameter("UGE_ID2", uGE_ID2) :
            new ObjectParameter("UGE_ID2", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delUGEOGRAFICA2", uGE_ID2Parameter, err);
    }


    public virtual int usp_delUGEOGRAFICA3(Nullable<int> uGE_ID3, ObjectParameter err)
    {

        var uGE_ID3Parameter = uGE_ID3.HasValue ?
            new ObjectParameter("UGE_ID3", uGE_ID3) :
            new ObjectParameter("UGE_ID3", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delUGEOGRAFICA3", uGE_ID3Parameter, err);
    }


    public virtual int usp_delUGEOGRAFICA4(Nullable<int> uGE_ID4, ObjectParameter err)
    {

        var uGE_ID4Parameter = uGE_ID4.HasValue ?
            new ObjectParameter("UGE_ID4", uGE_ID4) :
            new ObjectParameter("UGE_ID4", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delUGEOGRAFICA4", uGE_ID4Parameter, err);
    }


    public virtual int usp_delUGEOGRAFICA5(Nullable<int> uGE_ID5, ObjectParameter err)
    {

        var uGE_ID5Parameter = uGE_ID5.HasValue ?
            new ObjectParameter("UGE_ID5", uGE_ID5) :
            new ObjectParameter("UGE_ID5", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delUGEOGRAFICA5", uGE_ID5Parameter, err);
    }


    public virtual int usp_delUORGANICA2(Nullable<int> uOR_ID2, ObjectParameter err)
    {

        var uOR_ID2Parameter = uOR_ID2.HasValue ?
            new ObjectParameter("UOR_ID2", uOR_ID2) :
            new ObjectParameter("UOR_ID2", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delUORGANICA2", uOR_ID2Parameter, err);
    }


    public virtual int usp_delUORGANICA3(Nullable<int> uOR_ID3, ObjectParameter err)
    {

        var uOR_ID3Parameter = uOR_ID3.HasValue ?
            new ObjectParameter("UOR_ID3", uOR_ID3) :
            new ObjectParameter("UOR_ID3", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delUORGANICA3", uOR_ID3Parameter, err);
    }


    public virtual int usp_delUORGANICA4(Nullable<int> uOR_ID4, ObjectParameter err)
    {

        var uOR_ID4Parameter = uOR_ID4.HasValue ?
            new ObjectParameter("UOR_ID4", uOR_ID4) :
            new ObjectParameter("UOR_ID4", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delUORGANICA4", uOR_ID4Parameter, err);
    }


    public virtual int usp_ErrorLogin(string applicationName, string userName, string password, string iPAddress)
    {

        var applicationNameParameter = applicationName != null ?
            new ObjectParameter("ApplicationName", applicationName) :
            new ObjectParameter("ApplicationName", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        var iPAddressParameter = iPAddress != null ?
            new ObjectParameter("IPAddress", iPAddress) :
            new ObjectParameter("IPAddress", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ErrorLogin", applicationNameParameter, userNameParameter, passwordParameter, iPAddressParameter);
    }


    public virtual ObjectResult<usp_getActivomantenimiento_Result> usp_getActivomantenimiento(Nullable<int> actid)
    {

        var actidParameter = actid.HasValue ?
            new ObjectParameter("actid", actid) :
            new ObjectParameter("actid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getActivomantenimiento_Result>("usp_getActivomantenimiento", actidParameter);
    }


    public virtual ObjectResult<string> usp_getCaracteristicasAva()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_getCaracteristicasAva");
    }


    public virtual ObjectResult<usp_getDatosPdf_Result> usp_getDatosPdf(Nullable<int> actid)
    {

        var actidParameter = actid.HasValue ?
            new ObjectParameter("actid", actid) :
            new ObjectParameter("actid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getDatosPdf_Result>("usp_getDatosPdf", actidParameter);
    }


    public virtual ObjectResult<usp_getDatosPdf2_Result> usp_getDatosPdf2(Nullable<int> actid)
    {

        var actidParameter = actid.HasValue ?
            new ObjectParameter("actid", actid) :
            new ObjectParameter("actid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getDatosPdf2_Result>("usp_getDatosPdf2", actidParameter);
    }


    public virtual int usp_getDepreciacionGenerada(string tipo)
    {

        var tipoParameter = tipo != null ?
            new ObjectParameter("tipo", tipo) :
            new ObjectParameter("tipo", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_getDepreciacionGenerada", tipoParameter);
    }


    public virtual int usp_getDepreciacionGeneradaCCNiif(Nullable<System.DateTime> fecha)
    {

        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("fecha", fecha) :
            new ObjectParameter("fecha", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_getDepreciacionGeneradaCCNiif", fechaParameter);
    }


    public virtual int usp_getDepreciacionGeneradaCContables(string tipo, Nullable<System.DateTime> fecha)
    {

        var tipoParameter = tipo != null ?
            new ObjectParameter("tipo", tipo) :
            new ObjectParameter("tipo", typeof(string));


        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("fecha", fecha) :
            new ObjectParameter("fecha", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_getDepreciacionGeneradaCContables", tipoParameter, fechaParameter);
    }


    public virtual int usp_getDepreciacionGeneradaCContables2(string tipo, Nullable<System.DateTime> fecha)
    {

        var tipoParameter = tipo != null ?
            new ObjectParameter("tipo", tipo) :
            new ObjectParameter("tipo", typeof(string));


        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("fecha", fecha) :
            new ObjectParameter("fecha", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_getDepreciacionGeneradaCContables2", tipoParameter, fechaParameter);
    }


    public virtual int usp_getDepreciacionGeneradaCContables4(string tipo, Nullable<System.DateTime> fecha)
    {

        var tipoParameter = tipo != null ?
            new ObjectParameter("tipo", tipo) :
            new ObjectParameter("tipo", typeof(string));


        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("fecha", fecha) :
            new ObjectParameter("fecha", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_getDepreciacionGeneradaCContables4", tipoParameter, fechaParameter);
    }


    public virtual int usp_getDepreciacionGeneradaNiif(Nullable<System.DateTime> fecha)
    {

        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("fecha", fecha) :
            new ObjectParameter("fecha", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_getDepreciacionGeneradaNiif", fechaParameter);
    }


    public virtual int usp_getDepreciacionGeneradaOk(string tipo, Nullable<System.DateTime> fecha)
    {

        var tipoParameter = tipo != null ?
            new ObjectParameter("tipo", tipo) :
            new ObjectParameter("tipo", typeof(string));


        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("fecha", fecha) :
            new ObjectParameter("fecha", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_getDepreciacionGeneradaOk", tipoParameter, fechaParameter);
    }


    public virtual int usp_getDepreciacionGeneradaTribu()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_getDepreciacionGeneradaTribu");
    }


    public virtual int usp_getDepreciacionGeneradaTribu2(Nullable<System.DateTime> fecha)
    {

        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("fecha", fecha) :
            new ObjectParameter("fecha", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_getDepreciacionGeneradaTribu2", fechaParameter);
    }


    public virtual ObjectResult<usp_getFiltroActivoPpc_Result> usp_getFiltroActivoPpc(string where, string tipo)
    {

        var whereParameter = where != null ?
            new ObjectParameter("where", where) :
            new ObjectParameter("where", typeof(string));


        var tipoParameter = tipo != null ?
            new ObjectParameter("tipo", tipo) :
            new ObjectParameter("tipo", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getFiltroActivoPpc_Result>("usp_getFiltroActivoPpc", whereParameter, tipoParameter);
    }


    public virtual ObjectResult<usp_GetReporteGlobalAval_Result> usp_GetReporteGlobalAval(Nullable<System.DateTime> dESDE, Nullable<System.DateTime> hASTA)
    {

        var dESDEParameter = dESDE.HasValue ?
            new ObjectParameter("DESDE", dESDE) :
            new ObjectParameter("DESDE", typeof(System.DateTime));


        var hASTAParameter = hASTA.HasValue ?
            new ObjectParameter("HASTA", hASTA) :
            new ObjectParameter("HASTA", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetReporteGlobalAval_Result>("usp_GetReporteGlobalAval", dESDEParameter, hASTAParameter);
    }


    public virtual ObjectResult<usp_getReporteMantenimiento_Result> usp_getReporteMantenimiento(string idcod, string tipo)
    {

        var idcodParameter = idcod != null ?
            new ObjectParameter("idcod", idcod) :
            new ObjectParameter("idcod", typeof(string));


        var tipoParameter = tipo != null ?
            new ObjectParameter("tipo", tipo) :
            new ObjectParameter("tipo", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getReporteMantenimiento_Result>("usp_getReporteMantenimiento", idcodParameter, tipoParameter);
    }


    public virtual ObjectResult<usp_getReporteTransfer_Result> usp_getReporteTransfer(string cb, string tipo, Nullable<int> ide)
    {

        var cbParameter = cb != null ?
            new ObjectParameter("cb", cb) :
            new ObjectParameter("cb", typeof(string));


        var tipoParameter = tipo != null ?
            new ObjectParameter("tipo", tipo) :
            new ObjectParameter("tipo", typeof(string));


        var ideParameter = ide.HasValue ?
            new ObjectParameter("ide", ide) :
            new ObjectParameter("ide", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getReporteTransfer_Result>("usp_getReporteTransfer", cbParameter, tipoParameter, ideParameter);
    }


    public virtual ObjectResult<usp_getUgeAll3Level1_Result> usp_getUgeAll3Level1()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getUgeAll3Level1_Result>("usp_getUgeAll3Level1");
    }


    public virtual ObjectResult<usp_getUgeAll3Level2_Result> usp_getUgeAll3Level2()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getUgeAll3Level2_Result>("usp_getUgeAll3Level2");
    }


    public virtual ObjectResult<usp_getUgeAll3Level3_Result> usp_getUgeAll3Level3()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getUgeAll3Level3_Result>("usp_getUgeAll3Level3");
    }


    public virtual int usp_IniTransferACTIVO(Nullable<int> actid, string user, Nullable<int> geo1, Nullable<int> geo2, Nullable<int> geo3, Nullable<int> geo4, Nullable<int> uor1, Nullable<int> uor2, Nullable<int> uor3, Nullable<int> cus1, Nullable<int> cus2, Nullable<int> est1, Nullable<int> est2, Nullable<int> est3, string estman, ObjectParameter err)
    {

        var actidParameter = actid.HasValue ?
            new ObjectParameter("actid", actid) :
            new ObjectParameter("actid", typeof(int));


        var userParameter = user != null ?
            new ObjectParameter("user", user) :
            new ObjectParameter("user", typeof(string));


        var geo1Parameter = geo1.HasValue ?
            new ObjectParameter("geo1", geo1) :
            new ObjectParameter("geo1", typeof(int));


        var geo2Parameter = geo2.HasValue ?
            new ObjectParameter("geo2", geo2) :
            new ObjectParameter("geo2", typeof(int));


        var geo3Parameter = geo3.HasValue ?
            new ObjectParameter("geo3", geo3) :
            new ObjectParameter("geo3", typeof(int));


        var geo4Parameter = geo4.HasValue ?
            new ObjectParameter("geo4", geo4) :
            new ObjectParameter("geo4", typeof(int));


        var uor1Parameter = uor1.HasValue ?
            new ObjectParameter("uor1", uor1) :
            new ObjectParameter("uor1", typeof(int));


        var uor2Parameter = uor2.HasValue ?
            new ObjectParameter("uor2", uor2) :
            new ObjectParameter("uor2", typeof(int));


        var uor3Parameter = uor3.HasValue ?
            new ObjectParameter("uor3", uor3) :
            new ObjectParameter("uor3", typeof(int));


        var cus1Parameter = cus1.HasValue ?
            new ObjectParameter("cus1", cus1) :
            new ObjectParameter("cus1", typeof(int));


        var cus2Parameter = cus2.HasValue ?
            new ObjectParameter("cus2", cus2) :
            new ObjectParameter("cus2", typeof(int));


        var est1Parameter = est1.HasValue ?
            new ObjectParameter("est1", est1) :
            new ObjectParameter("est1", typeof(int));


        var est2Parameter = est2.HasValue ?
            new ObjectParameter("est2", est2) :
            new ObjectParameter("est2", typeof(int));


        var est3Parameter = est3.HasValue ?
            new ObjectParameter("est3", est3) :
            new ObjectParameter("est3", typeof(int));


        var estmanParameter = estman != null ?
            new ObjectParameter("estman", estman) :
            new ObjectParameter("estman", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IniTransferACTIVO", actidParameter, userParameter, geo1Parameter, geo2Parameter, geo3Parameter, geo4Parameter, uor1Parameter, uor2Parameter, uor3Parameter, cus1Parameter, cus2Parameter, est1Parameter, est2Parameter, est3Parameter, estmanParameter, err);
    }


    public virtual int usp_IniTransferACTIVOMas(Nullable<int> actid, string user, Nullable<int> geo1, Nullable<int> geo2, Nullable<int> geo3, Nullable<int> geo4, Nullable<int> uor1, Nullable<int> uor2, Nullable<int> uor3, Nullable<int> cus1, Nullable<int> cus2, Nullable<int> est3, ObjectParameter err)
    {

        var actidParameter = actid.HasValue ?
            new ObjectParameter("actid", actid) :
            new ObjectParameter("actid", typeof(int));


        var userParameter = user != null ?
            new ObjectParameter("user", user) :
            new ObjectParameter("user", typeof(string));


        var geo1Parameter = geo1.HasValue ?
            new ObjectParameter("geo1", geo1) :
            new ObjectParameter("geo1", typeof(int));


        var geo2Parameter = geo2.HasValue ?
            new ObjectParameter("geo2", geo2) :
            new ObjectParameter("geo2", typeof(int));


        var geo3Parameter = geo3.HasValue ?
            new ObjectParameter("geo3", geo3) :
            new ObjectParameter("geo3", typeof(int));


        var geo4Parameter = geo4.HasValue ?
            new ObjectParameter("geo4", geo4) :
            new ObjectParameter("geo4", typeof(int));


        var uor1Parameter = uor1.HasValue ?
            new ObjectParameter("uor1", uor1) :
            new ObjectParameter("uor1", typeof(int));


        var uor2Parameter = uor2.HasValue ?
            new ObjectParameter("uor2", uor2) :
            new ObjectParameter("uor2", typeof(int));


        var uor3Parameter = uor3.HasValue ?
            new ObjectParameter("uor3", uor3) :
            new ObjectParameter("uor3", typeof(int));


        var cus1Parameter = cus1.HasValue ?
            new ObjectParameter("cus1", cus1) :
            new ObjectParameter("cus1", typeof(int));


        var cus2Parameter = cus2.HasValue ?
            new ObjectParameter("cus2", cus2) :
            new ObjectParameter("cus2", typeof(int));


        var est3Parameter = est3.HasValue ?
            new ObjectParameter("est3", est3) :
            new ObjectParameter("est3", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IniTransferACTIVOMas", actidParameter, userParameter, geo1Parameter, geo2Parameter, geo3Parameter, geo4Parameter, uor1Parameter, uor2Parameter, uor3Parameter, cus1Parameter, cus2Parameter, est3Parameter, err);
    }


    public virtual int usp_insDepreGenerada(string tipo, Nullable<System.DateTime> fecha, string user)
    {

        var tipoParameter = tipo != null ?
            new ObjectParameter("tipo", tipo) :
            new ObjectParameter("tipo", typeof(string));


        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("fecha", fecha) :
            new ObjectParameter("fecha", typeof(System.DateTime));


        var userParameter = user != null ?
            new ObjectParameter("user", user) :
            new ObjectParameter("user", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insDepreGenerada", tipoParameter, fechaParameter, userParameter);
    }


    public virtual int usp_insDepreGeneradaNiif(Nullable<System.DateTime> fecha, string user, ObjectParameter err)
    {

        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("fecha", fecha) :
            new ObjectParameter("fecha", typeof(System.DateTime));


        var userParameter = user != null ?
            new ObjectParameter("user", user) :
            new ObjectParameter("user", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insDepreGeneradaNiif", fechaParameter, userParameter, err);
    }


    public virtual int usp_insDepreGeneradaTribu(Nullable<System.DateTime> fecha, string user, ObjectParameter err)
    {

        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("fecha", fecha) :
            new ObjectParameter("fecha", typeof(System.DateTime));


        var userParameter = user != null ?
            new ObjectParameter("user", user) :
            new ObjectParameter("user", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insDepreGeneradaTribu", fechaParameter, userParameter, err);
    }


    public virtual int usp_InsertACTIVO(Nullable<int> aCT_ID, string eMP_ID, Nullable<System.DateTime> aCT_FECHAINIDEPRE, Nullable<bool> aCT_DEPRECIABLE, string uSERNAME, string aCT_TIPO, string aCT_CODBARRAS, string aCT_CODBARRASPADRE, string aCT_CODIGO1, Nullable<int> gRU_ID1, Nullable<int> gRU_ID2, Nullable<int> gRU_ID3, string aCT_FOTO1, string aCT_FOTO2, string aCT_DOC1, string aCT_DOC2, Nullable<int> uGE_ID1, Nullable<int> uGE_ID2, Nullable<int> uGE_ID3, Nullable<int> uGE_ID4, Nullable<int> uOR_ID1, Nullable<int> uOR_ID2, Nullable<int> uOR_ID3, Nullable<int> cUS_ID1, Nullable<int> eST_ID1, Nullable<int> eST_ID2, Nullable<int> eST_ID3, Nullable<int> mAR_ID, Nullable<int> mOD_ID, string aCT_SERIE1, Nullable<int> cOL_ID, Nullable<int> eCO_ID1, Nullable<int> eCO_ID2, Nullable<int> pRO_ID, string aCT_TIPOING, Nullable<decimal> aCT_NUMFACT, Nullable<System.DateTime> aCT_FECHACOMPRA, Nullable<decimal> aCT_VALORCOMPRA, Nullable<int> aCT_ANIO, Nullable<int> aCT_VIDAUTIL, Nullable<int> aCT_VIDAUTILNIIF, Nullable<decimal> aCT_VALORRESIDUALNIIF, Nullable<System.DateTime> aCT_FECHAINIOPER, Nullable<System.DateTime> aCT_FECHAINIDEPRENIIF, Nullable<bool> aCT_GARANTIA, Nullable<System.DateTime> aCT_FECHAGARANTIAVENCE, string aCT_OBSERVACIONES, string aCT_CODRFID, Nullable<int> aCT_TIPRFID, string aCT_SEGURO, Nullable<int> aCT_TIPOSEGURO, Nullable<System.DateTime> aCT_FECHACREACION, string aCT_NUMPOLIZA, Nullable<int> aCT_VIGENCIAPOLIZAMESES, Nullable<System.DateTime> aCT_FECHAEMISIONPOLIZA, Nullable<System.DateTime> aCT_FECHAVENCEPOLIZA, Nullable<decimal> aCT_VALORASEGURADO, ObjectParameter err)
    {

        var aCT_IDParameter = aCT_ID.HasValue ?
            new ObjectParameter("ACT_ID", aCT_ID) :
            new ObjectParameter("ACT_ID", typeof(int));


        var eMP_IDParameter = eMP_ID != null ?
            new ObjectParameter("EMP_ID", eMP_ID) :
            new ObjectParameter("EMP_ID", typeof(string));


        var aCT_FECHAINIDEPREParameter = aCT_FECHAINIDEPRE.HasValue ?
            new ObjectParameter("ACT_FECHAINIDEPRE", aCT_FECHAINIDEPRE) :
            new ObjectParameter("ACT_FECHAINIDEPRE", typeof(System.DateTime));


        var aCT_DEPRECIABLEParameter = aCT_DEPRECIABLE.HasValue ?
            new ObjectParameter("ACT_DEPRECIABLE", aCT_DEPRECIABLE) :
            new ObjectParameter("ACT_DEPRECIABLE", typeof(bool));


        var uSERNAMEParameter = uSERNAME != null ?
            new ObjectParameter("USERNAME", uSERNAME) :
            new ObjectParameter("USERNAME", typeof(string));


        var aCT_TIPOParameter = aCT_TIPO != null ?
            new ObjectParameter("ACT_TIPO", aCT_TIPO) :
            new ObjectParameter("ACT_TIPO", typeof(string));


        var aCT_CODBARRASParameter = aCT_CODBARRAS != null ?
            new ObjectParameter("ACT_CODBARRAS", aCT_CODBARRAS) :
            new ObjectParameter("ACT_CODBARRAS", typeof(string));


        var aCT_CODBARRASPADREParameter = aCT_CODBARRASPADRE != null ?
            new ObjectParameter("ACT_CODBARRASPADRE", aCT_CODBARRASPADRE) :
            new ObjectParameter("ACT_CODBARRASPADRE", typeof(string));


        var aCT_CODIGO1Parameter = aCT_CODIGO1 != null ?
            new ObjectParameter("ACT_CODIGO1", aCT_CODIGO1) :
            new ObjectParameter("ACT_CODIGO1", typeof(string));


        var gRU_ID1Parameter = gRU_ID1.HasValue ?
            new ObjectParameter("GRU_ID1", gRU_ID1) :
            new ObjectParameter("GRU_ID1", typeof(int));


        var gRU_ID2Parameter = gRU_ID2.HasValue ?
            new ObjectParameter("GRU_ID2", gRU_ID2) :
            new ObjectParameter("GRU_ID2", typeof(int));


        var gRU_ID3Parameter = gRU_ID3.HasValue ?
            new ObjectParameter("GRU_ID3", gRU_ID3) :
            new ObjectParameter("GRU_ID3", typeof(int));


        var aCT_FOTO1Parameter = aCT_FOTO1 != null ?
            new ObjectParameter("ACT_FOTO1", aCT_FOTO1) :
            new ObjectParameter("ACT_FOTO1", typeof(string));


        var aCT_FOTO2Parameter = aCT_FOTO2 != null ?
            new ObjectParameter("ACT_FOTO2", aCT_FOTO2) :
            new ObjectParameter("ACT_FOTO2", typeof(string));


        var aCT_DOC1Parameter = aCT_DOC1 != null ?
            new ObjectParameter("ACT_DOC1", aCT_DOC1) :
            new ObjectParameter("ACT_DOC1", typeof(string));


        var aCT_DOC2Parameter = aCT_DOC2 != null ?
            new ObjectParameter("ACT_DOC2", aCT_DOC2) :
            new ObjectParameter("ACT_DOC2", typeof(string));


        var uGE_ID1Parameter = uGE_ID1.HasValue ?
            new ObjectParameter("UGE_ID1", uGE_ID1) :
            new ObjectParameter("UGE_ID1", typeof(int));


        var uGE_ID2Parameter = uGE_ID2.HasValue ?
            new ObjectParameter("UGE_ID2", uGE_ID2) :
            new ObjectParameter("UGE_ID2", typeof(int));


        var uGE_ID3Parameter = uGE_ID3.HasValue ?
            new ObjectParameter("UGE_ID3", uGE_ID3) :
            new ObjectParameter("UGE_ID3", typeof(int));


        var uGE_ID4Parameter = uGE_ID4.HasValue ?
            new ObjectParameter("UGE_ID4", uGE_ID4) :
            new ObjectParameter("UGE_ID4", typeof(int));


        var uOR_ID1Parameter = uOR_ID1.HasValue ?
            new ObjectParameter("UOR_ID1", uOR_ID1) :
            new ObjectParameter("UOR_ID1", typeof(int));


        var uOR_ID2Parameter = uOR_ID2.HasValue ?
            new ObjectParameter("UOR_ID2", uOR_ID2) :
            new ObjectParameter("UOR_ID2", typeof(int));


        var uOR_ID3Parameter = uOR_ID3.HasValue ?
            new ObjectParameter("UOR_ID3", uOR_ID3) :
            new ObjectParameter("UOR_ID3", typeof(int));


        var cUS_ID1Parameter = cUS_ID1.HasValue ?
            new ObjectParameter("CUS_ID1", cUS_ID1) :
            new ObjectParameter("CUS_ID1", typeof(int));


        var eST_ID1Parameter = eST_ID1.HasValue ?
            new ObjectParameter("EST_ID1", eST_ID1) :
            new ObjectParameter("EST_ID1", typeof(int));


        var eST_ID2Parameter = eST_ID2.HasValue ?
            new ObjectParameter("EST_ID2", eST_ID2) :
            new ObjectParameter("EST_ID2", typeof(int));


        var eST_ID3Parameter = eST_ID3.HasValue ?
            new ObjectParameter("EST_ID3", eST_ID3) :
            new ObjectParameter("EST_ID3", typeof(int));


        var mAR_IDParameter = mAR_ID.HasValue ?
            new ObjectParameter("MAR_ID", mAR_ID) :
            new ObjectParameter("MAR_ID", typeof(int));


        var mOD_IDParameter = mOD_ID.HasValue ?
            new ObjectParameter("MOD_ID", mOD_ID) :
            new ObjectParameter("MOD_ID", typeof(int));


        var aCT_SERIE1Parameter = aCT_SERIE1 != null ?
            new ObjectParameter("ACT_SERIE1", aCT_SERIE1) :
            new ObjectParameter("ACT_SERIE1", typeof(string));


        var cOL_IDParameter = cOL_ID.HasValue ?
            new ObjectParameter("COL_ID", cOL_ID) :
            new ObjectParameter("COL_ID", typeof(int));


        var eCO_ID1Parameter = eCO_ID1.HasValue ?
            new ObjectParameter("ECO_ID1", eCO_ID1) :
            new ObjectParameter("ECO_ID1", typeof(int));


        var eCO_ID2Parameter = eCO_ID2.HasValue ?
            new ObjectParameter("ECO_ID2", eCO_ID2) :
            new ObjectParameter("ECO_ID2", typeof(int));


        var pRO_IDParameter = pRO_ID.HasValue ?
            new ObjectParameter("PRO_ID", pRO_ID) :
            new ObjectParameter("PRO_ID", typeof(int));


        var aCT_TIPOINGParameter = aCT_TIPOING != null ?
            new ObjectParameter("ACT_TIPOING", aCT_TIPOING) :
            new ObjectParameter("ACT_TIPOING", typeof(string));


        var aCT_NUMFACTParameter = aCT_NUMFACT.HasValue ?
            new ObjectParameter("ACT_NUMFACT", aCT_NUMFACT) :
            new ObjectParameter("ACT_NUMFACT", typeof(decimal));


        var aCT_FECHACOMPRAParameter = aCT_FECHACOMPRA.HasValue ?
            new ObjectParameter("ACT_FECHACOMPRA", aCT_FECHACOMPRA) :
            new ObjectParameter("ACT_FECHACOMPRA", typeof(System.DateTime));


        var aCT_VALORCOMPRAParameter = aCT_VALORCOMPRA.HasValue ?
            new ObjectParameter("ACT_VALORCOMPRA", aCT_VALORCOMPRA) :
            new ObjectParameter("ACT_VALORCOMPRA", typeof(decimal));


        var aCT_ANIOParameter = aCT_ANIO.HasValue ?
            new ObjectParameter("ACT_ANIO", aCT_ANIO) :
            new ObjectParameter("ACT_ANIO", typeof(int));


        var aCT_VIDAUTILParameter = aCT_VIDAUTIL.HasValue ?
            new ObjectParameter("ACT_VIDAUTIL", aCT_VIDAUTIL) :
            new ObjectParameter("ACT_VIDAUTIL", typeof(int));


        var aCT_VIDAUTILNIIFParameter = aCT_VIDAUTILNIIF.HasValue ?
            new ObjectParameter("ACT_VIDAUTILNIIF", aCT_VIDAUTILNIIF) :
            new ObjectParameter("ACT_VIDAUTILNIIF", typeof(int));


        var aCT_VALORRESIDUALNIIFParameter = aCT_VALORRESIDUALNIIF.HasValue ?
            new ObjectParameter("ACT_VALORRESIDUALNIIF", aCT_VALORRESIDUALNIIF) :
            new ObjectParameter("ACT_VALORRESIDUALNIIF", typeof(decimal));


        var aCT_FECHAINIOPERParameter = aCT_FECHAINIOPER.HasValue ?
            new ObjectParameter("ACT_FECHAINIOPER", aCT_FECHAINIOPER) :
            new ObjectParameter("ACT_FECHAINIOPER", typeof(System.DateTime));


        var aCT_FECHAINIDEPRENIIFParameter = aCT_FECHAINIDEPRENIIF.HasValue ?
            new ObjectParameter("ACT_FECHAINIDEPRENIIF", aCT_FECHAINIDEPRENIIF) :
            new ObjectParameter("ACT_FECHAINIDEPRENIIF", typeof(System.DateTime));


        var aCT_GARANTIAParameter = aCT_GARANTIA.HasValue ?
            new ObjectParameter("ACT_GARANTIA", aCT_GARANTIA) :
            new ObjectParameter("ACT_GARANTIA", typeof(bool));


        var aCT_FECHAGARANTIAVENCEParameter = aCT_FECHAGARANTIAVENCE.HasValue ?
            new ObjectParameter("ACT_FECHAGARANTIAVENCE", aCT_FECHAGARANTIAVENCE) :
            new ObjectParameter("ACT_FECHAGARANTIAVENCE", typeof(System.DateTime));


        var aCT_OBSERVACIONESParameter = aCT_OBSERVACIONES != null ?
            new ObjectParameter("ACT_OBSERVACIONES", aCT_OBSERVACIONES) :
            new ObjectParameter("ACT_OBSERVACIONES", typeof(string));


        var aCT_CODRFIDParameter = aCT_CODRFID != null ?
            new ObjectParameter("ACT_CODRFID", aCT_CODRFID) :
            new ObjectParameter("ACT_CODRFID", typeof(string));


        var aCT_TIPRFIDParameter = aCT_TIPRFID.HasValue ?
            new ObjectParameter("ACT_TIPRFID", aCT_TIPRFID) :
            new ObjectParameter("ACT_TIPRFID", typeof(int));


        var aCT_SEGUROParameter = aCT_SEGURO != null ?
            new ObjectParameter("ACT_SEGURO", aCT_SEGURO) :
            new ObjectParameter("ACT_SEGURO", typeof(string));


        var aCT_TIPOSEGUROParameter = aCT_TIPOSEGURO.HasValue ?
            new ObjectParameter("ACT_TIPOSEGURO", aCT_TIPOSEGURO) :
            new ObjectParameter("ACT_TIPOSEGURO", typeof(int));


        var aCT_FECHACREACIONParameter = aCT_FECHACREACION.HasValue ?
            new ObjectParameter("ACT_FECHACREACION", aCT_FECHACREACION) :
            new ObjectParameter("ACT_FECHACREACION", typeof(System.DateTime));


        var aCT_NUMPOLIZAParameter = aCT_NUMPOLIZA != null ?
            new ObjectParameter("ACT_NUMPOLIZA", aCT_NUMPOLIZA) :
            new ObjectParameter("ACT_NUMPOLIZA", typeof(string));


        var aCT_VIGENCIAPOLIZAMESESParameter = aCT_VIGENCIAPOLIZAMESES.HasValue ?
            new ObjectParameter("ACT_VIGENCIAPOLIZAMESES", aCT_VIGENCIAPOLIZAMESES) :
            new ObjectParameter("ACT_VIGENCIAPOLIZAMESES", typeof(int));


        var aCT_FECHAEMISIONPOLIZAParameter = aCT_FECHAEMISIONPOLIZA.HasValue ?
            new ObjectParameter("ACT_FECHAEMISIONPOLIZA", aCT_FECHAEMISIONPOLIZA) :
            new ObjectParameter("ACT_FECHAEMISIONPOLIZA", typeof(System.DateTime));


        var aCT_FECHAVENCEPOLIZAParameter = aCT_FECHAVENCEPOLIZA.HasValue ?
            new ObjectParameter("ACT_FECHAVENCEPOLIZA", aCT_FECHAVENCEPOLIZA) :
            new ObjectParameter("ACT_FECHAVENCEPOLIZA", typeof(System.DateTime));


        var aCT_VALORASEGURADOParameter = aCT_VALORASEGURADO.HasValue ?
            new ObjectParameter("ACT_VALORASEGURADO", aCT_VALORASEGURADO) :
            new ObjectParameter("ACT_VALORASEGURADO", typeof(decimal));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertACTIVO", aCT_IDParameter, eMP_IDParameter, aCT_FECHAINIDEPREParameter, aCT_DEPRECIABLEParameter, uSERNAMEParameter, aCT_TIPOParameter, aCT_CODBARRASParameter, aCT_CODBARRASPADREParameter, aCT_CODIGO1Parameter, gRU_ID1Parameter, gRU_ID2Parameter, gRU_ID3Parameter, aCT_FOTO1Parameter, aCT_FOTO2Parameter, aCT_DOC1Parameter, aCT_DOC2Parameter, uGE_ID1Parameter, uGE_ID2Parameter, uGE_ID3Parameter, uGE_ID4Parameter, uOR_ID1Parameter, uOR_ID2Parameter, uOR_ID3Parameter, cUS_ID1Parameter, eST_ID1Parameter, eST_ID2Parameter, eST_ID3Parameter, mAR_IDParameter, mOD_IDParameter, aCT_SERIE1Parameter, cOL_IDParameter, eCO_ID1Parameter, eCO_ID2Parameter, pRO_IDParameter, aCT_TIPOINGParameter, aCT_NUMFACTParameter, aCT_FECHACOMPRAParameter, aCT_VALORCOMPRAParameter, aCT_ANIOParameter, aCT_VIDAUTILParameter, aCT_VIDAUTILNIIFParameter, aCT_VALORRESIDUALNIIFParameter, aCT_FECHAINIOPERParameter, aCT_FECHAINIDEPRENIIFParameter, aCT_GARANTIAParameter, aCT_FECHAGARANTIAVENCEParameter, aCT_OBSERVACIONESParameter, aCT_CODRFIDParameter, aCT_TIPRFIDParameter, aCT_SEGUROParameter, aCT_TIPOSEGUROParameter, aCT_FECHACREACIONParameter, aCT_NUMPOLIZAParameter, aCT_VIGENCIAPOLIZAMESESParameter, aCT_FECHAEMISIONPOLIZAParameter, aCT_FECHAVENCEPOLIZAParameter, aCT_VALORASEGURADOParameter, err);
    }


    public virtual int usp_InsertACTIVOM(string aCT_OBSERVACIONES2, Nullable<int> aCT_ID, string eMP_ID, string uSERNAME, string aCT_TIPO, string aCT_CODBARRAS, string aCT_CODBARRASPADRE, string aCT_CODIGO1, Nullable<int> gRU_ID1, Nullable<int> gRU_ID2, Nullable<int> gRU_ID3, string aCT_FOTO1, string aCT_FOTO2, string aCT_DOC1, Nullable<int> uGE_ID1, Nullable<int> uGE_ID2, Nullable<int> uGE_ID3, Nullable<int> uGE_ID4, Nullable<int> uOR_ID1, Nullable<int> uOR_ID2, Nullable<int> uOR_ID3, Nullable<int> cUS_ID1, Nullable<int> cUS_ID2, Nullable<int> eST_ID1, Nullable<int> eST_ID2, Nullable<int> eST_ID3, Nullable<int> mAR_ID, Nullable<int> mOD_ID, string aCT_SERIE1, Nullable<int> cOL_ID, Nullable<int> eCO_ID1, Nullable<int> eCO_ID2, Nullable<System.DateTime> aCT_FECHACOMPRA, Nullable<int> aCT_ANIO, string aCT_OBSERVACIONES, ObjectParameter err)
    {

        var aCT_OBSERVACIONES2Parameter = aCT_OBSERVACIONES2 != null ?
            new ObjectParameter("ACT_OBSERVACIONES2", aCT_OBSERVACIONES2) :
            new ObjectParameter("ACT_OBSERVACIONES2", typeof(string));


        var aCT_IDParameter = aCT_ID.HasValue ?
            new ObjectParameter("ACT_ID", aCT_ID) :
            new ObjectParameter("ACT_ID", typeof(int));


        var eMP_IDParameter = eMP_ID != null ?
            new ObjectParameter("EMP_ID", eMP_ID) :
            new ObjectParameter("EMP_ID", typeof(string));


        var uSERNAMEParameter = uSERNAME != null ?
            new ObjectParameter("USERNAME", uSERNAME) :
            new ObjectParameter("USERNAME", typeof(string));


        var aCT_TIPOParameter = aCT_TIPO != null ?
            new ObjectParameter("ACT_TIPO", aCT_TIPO) :
            new ObjectParameter("ACT_TIPO", typeof(string));


        var aCT_CODBARRASParameter = aCT_CODBARRAS != null ?
            new ObjectParameter("ACT_CODBARRAS", aCT_CODBARRAS) :
            new ObjectParameter("ACT_CODBARRAS", typeof(string));


        var aCT_CODBARRASPADREParameter = aCT_CODBARRASPADRE != null ?
            new ObjectParameter("ACT_CODBARRASPADRE", aCT_CODBARRASPADRE) :
            new ObjectParameter("ACT_CODBARRASPADRE", typeof(string));


        var aCT_CODIGO1Parameter = aCT_CODIGO1 != null ?
            new ObjectParameter("ACT_CODIGO1", aCT_CODIGO1) :
            new ObjectParameter("ACT_CODIGO1", typeof(string));


        var gRU_ID1Parameter = gRU_ID1.HasValue ?
            new ObjectParameter("GRU_ID1", gRU_ID1) :
            new ObjectParameter("GRU_ID1", typeof(int));


        var gRU_ID2Parameter = gRU_ID2.HasValue ?
            new ObjectParameter("GRU_ID2", gRU_ID2) :
            new ObjectParameter("GRU_ID2", typeof(int));


        var gRU_ID3Parameter = gRU_ID3.HasValue ?
            new ObjectParameter("GRU_ID3", gRU_ID3) :
            new ObjectParameter("GRU_ID3", typeof(int));


        var aCT_FOTO1Parameter = aCT_FOTO1 != null ?
            new ObjectParameter("ACT_FOTO1", aCT_FOTO1) :
            new ObjectParameter("ACT_FOTO1", typeof(string));


        var aCT_FOTO2Parameter = aCT_FOTO2 != null ?
            new ObjectParameter("ACT_FOTO2", aCT_FOTO2) :
            new ObjectParameter("ACT_FOTO2", typeof(string));


        var aCT_DOC1Parameter = aCT_DOC1 != null ?
            new ObjectParameter("ACT_DOC1", aCT_DOC1) :
            new ObjectParameter("ACT_DOC1", typeof(string));


        var uGE_ID1Parameter = uGE_ID1.HasValue ?
            new ObjectParameter("UGE_ID1", uGE_ID1) :
            new ObjectParameter("UGE_ID1", typeof(int));


        var uGE_ID2Parameter = uGE_ID2.HasValue ?
            new ObjectParameter("UGE_ID2", uGE_ID2) :
            new ObjectParameter("UGE_ID2", typeof(int));


        var uGE_ID3Parameter = uGE_ID3.HasValue ?
            new ObjectParameter("UGE_ID3", uGE_ID3) :
            new ObjectParameter("UGE_ID3", typeof(int));


        var uGE_ID4Parameter = uGE_ID4.HasValue ?
            new ObjectParameter("UGE_ID4", uGE_ID4) :
            new ObjectParameter("UGE_ID4", typeof(int));


        var uOR_ID1Parameter = uOR_ID1.HasValue ?
            new ObjectParameter("UOR_ID1", uOR_ID1) :
            new ObjectParameter("UOR_ID1", typeof(int));


        var uOR_ID2Parameter = uOR_ID2.HasValue ?
            new ObjectParameter("UOR_ID2", uOR_ID2) :
            new ObjectParameter("UOR_ID2", typeof(int));


        var uOR_ID3Parameter = uOR_ID3.HasValue ?
            new ObjectParameter("UOR_ID3", uOR_ID3) :
            new ObjectParameter("UOR_ID3", typeof(int));


        var cUS_ID1Parameter = cUS_ID1.HasValue ?
            new ObjectParameter("CUS_ID1", cUS_ID1) :
            new ObjectParameter("CUS_ID1", typeof(int));


        var cUS_ID2Parameter = cUS_ID2.HasValue ?
            new ObjectParameter("CUS_ID2", cUS_ID2) :
            new ObjectParameter("CUS_ID2", typeof(int));


        var eST_ID1Parameter = eST_ID1.HasValue ?
            new ObjectParameter("EST_ID1", eST_ID1) :
            new ObjectParameter("EST_ID1", typeof(int));


        var eST_ID2Parameter = eST_ID2.HasValue ?
            new ObjectParameter("EST_ID2", eST_ID2) :
            new ObjectParameter("EST_ID2", typeof(int));


        var eST_ID3Parameter = eST_ID3.HasValue ?
            new ObjectParameter("EST_ID3", eST_ID3) :
            new ObjectParameter("EST_ID3", typeof(int));


        var mAR_IDParameter = mAR_ID.HasValue ?
            new ObjectParameter("MAR_ID", mAR_ID) :
            new ObjectParameter("MAR_ID", typeof(int));


        var mOD_IDParameter = mOD_ID.HasValue ?
            new ObjectParameter("MOD_ID", mOD_ID) :
            new ObjectParameter("MOD_ID", typeof(int));


        var aCT_SERIE1Parameter = aCT_SERIE1 != null ?
            new ObjectParameter("ACT_SERIE1", aCT_SERIE1) :
            new ObjectParameter("ACT_SERIE1", typeof(string));


        var cOL_IDParameter = cOL_ID.HasValue ?
            new ObjectParameter("COL_ID", cOL_ID) :
            new ObjectParameter("COL_ID", typeof(int));


        var eCO_ID1Parameter = eCO_ID1.HasValue ?
            new ObjectParameter("ECO_ID1", eCO_ID1) :
            new ObjectParameter("ECO_ID1", typeof(int));


        var eCO_ID2Parameter = eCO_ID2.HasValue ?
            new ObjectParameter("ECO_ID2", eCO_ID2) :
            new ObjectParameter("ECO_ID2", typeof(int));


        var aCT_FECHACOMPRAParameter = aCT_FECHACOMPRA.HasValue ?
            new ObjectParameter("ACT_FECHACOMPRA", aCT_FECHACOMPRA) :
            new ObjectParameter("ACT_FECHACOMPRA", typeof(System.DateTime));


        var aCT_ANIOParameter = aCT_ANIO.HasValue ?
            new ObjectParameter("ACT_ANIO", aCT_ANIO) :
            new ObjectParameter("ACT_ANIO", typeof(int));


        var aCT_OBSERVACIONESParameter = aCT_OBSERVACIONES != null ?
            new ObjectParameter("ACT_OBSERVACIONES", aCT_OBSERVACIONES) :
            new ObjectParameter("ACT_OBSERVACIONES", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertACTIVOM", aCT_OBSERVACIONES2Parameter, aCT_IDParameter, eMP_IDParameter, uSERNAMEParameter, aCT_TIPOParameter, aCT_CODBARRASParameter, aCT_CODBARRASPADREParameter, aCT_CODIGO1Parameter, gRU_ID1Parameter, gRU_ID2Parameter, gRU_ID3Parameter, aCT_FOTO1Parameter, aCT_FOTO2Parameter, aCT_DOC1Parameter, uGE_ID1Parameter, uGE_ID2Parameter, uGE_ID3Parameter, uGE_ID4Parameter, uOR_ID1Parameter, uOR_ID2Parameter, uOR_ID3Parameter, cUS_ID1Parameter, cUS_ID2Parameter, eST_ID1Parameter, eST_ID2Parameter, eST_ID3Parameter, mAR_IDParameter, mOD_IDParameter, aCT_SERIE1Parameter, cOL_IDParameter, eCO_ID1Parameter, eCO_ID2Parameter, aCT_FECHACOMPRAParameter, aCT_ANIOParameter, aCT_OBSERVACIONESParameter, err);
    }


    public virtual int usp_InsertMANTENIMIENTO(string mAN_DESCRIPCION, Nullable<int> tIP_ID, string uSERNAME, Nullable<System.DateTime> mAN_FECHA, Nullable<int> aCT_ID, Nullable<bool> mAN_REALIZADO, ObjectParameter err)
    {

        var mAN_DESCRIPCIONParameter = mAN_DESCRIPCION != null ?
            new ObjectParameter("MAN_DESCRIPCION", mAN_DESCRIPCION) :
            new ObjectParameter("MAN_DESCRIPCION", typeof(string));


        var tIP_IDParameter = tIP_ID.HasValue ?
            new ObjectParameter("TIP_ID", tIP_ID) :
            new ObjectParameter("TIP_ID", typeof(int));


        var uSERNAMEParameter = uSERNAME != null ?
            new ObjectParameter("USERNAME", uSERNAME) :
            new ObjectParameter("USERNAME", typeof(string));


        var mAN_FECHAParameter = mAN_FECHA.HasValue ?
            new ObjectParameter("MAN_FECHA", mAN_FECHA) :
            new ObjectParameter("MAN_FECHA", typeof(System.DateTime));


        var aCT_IDParameter = aCT_ID.HasValue ?
            new ObjectParameter("ACT_ID", aCT_ID) :
            new ObjectParameter("ACT_ID", typeof(int));


        var mAN_REALIZADOParameter = mAN_REALIZADO.HasValue ?
            new ObjectParameter("MAN_REALIZADO", mAN_REALIZADO) :
            new ObjectParameter("MAN_REALIZADO", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertMANTENIMIENTO", mAN_DESCRIPCIONParameter, tIP_IDParameter, uSERNAMEParameter, mAN_FECHAParameter, aCT_IDParameter, mAN_REALIZADOParameter, err);
    }


    public virtual int usp_ReporteACTIVOPdf(string where)
    {

        var whereParameter = where != null ?
            new ObjectParameter("where", where) :
            new ObjectParameter("where", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReporteACTIVOPdf", whereParameter);
    }


    public virtual int usp_ReporteACTIVOPdf11(string where)
    {

        var whereParameter = where != null ?
            new ObjectParameter("where", where) :
            new ObjectParameter("where", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReporteACTIVOPdf11", whereParameter);
    }


    public virtual int usp_ReporteAutorizadosRFID(string where)
    {

        var whereParameter = where != null ?
            new ObjectParameter("where", where) :
            new ObjectParameter("where", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReporteAutorizadosRFID", whereParameter);
    }


    public virtual int usp_ReporteFiltradoRFID(string where)
    {

        var whereParameter = where != null ?
            new ObjectParameter("where", where) :
            new ObjectParameter("where", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReporteFiltradoRFID", whereParameter);
    }


    public virtual int usp_ReporteGlobalACTIVO(string where)
    {

        var whereParameter = where != null ?
            new ObjectParameter("where", where) :
            new ObjectParameter("where", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReporteGlobalACTIVO", whereParameter);
    }


    public virtual int usp_ReporteGlobalACTIVO_AVALUAC(string where)
    {

        var whereParameter = where != null ?
            new ObjectParameter("where", where) :
            new ObjectParameter("where", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReporteGlobalACTIVO_AVALUAC", whereParameter);
    }


    public virtual int usp_ReporteGlobalACTIVO2(string where, Nullable<System.DateTime> f1, Nullable<System.DateTime> f2, string user)
    {

        var whereParameter = where != null ?
            new ObjectParameter("where", where) :
            new ObjectParameter("where", typeof(string));


        var f1Parameter = f1.HasValue ?
            new ObjectParameter("f1", f1) :
            new ObjectParameter("f1", typeof(System.DateTime));


        var f2Parameter = f2.HasValue ?
            new ObjectParameter("f2", f2) :
            new ObjectParameter("f2", typeof(System.DateTime));


        var userParameter = user != null ?
            new ObjectParameter("user", user) :
            new ObjectParameter("user", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReporteGlobalACTIVO2", whereParameter, f1Parameter, f2Parameter, userParameter);
    }


    public virtual int usp_ReporteGlobalACTIVOAll(string where)
    {

        var whereParameter = where != null ?
            new ObjectParameter("where", where) :
            new ObjectParameter("where", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReporteGlobalACTIVOAll", whereParameter);
    }


    public virtual int usp_ReporteGlobalACTVO()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReporteGlobalACTVO");
    }


    public virtual int usp_ReporteGlobalTrasACTIVO(string where)
    {

        var whereParameter = where != null ?
            new ObjectParameter("where", where) :
            new ObjectParameter("where", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReporteGlobalTrasACTIVO", whereParameter);
    }


    public virtual int usp_ReportePpcACTIVO(string tipo)
    {

        var tipoParameter = tipo != null ?
            new ObjectParameter("tipo", tipo) :
            new ObjectParameter("tipo", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ReportePpcACTIVO", tipoParameter);
    }


    public virtual ObjectResult<usp_SummaryLoginS_Result> usp_SummaryLoginS()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SummaryLoginS_Result>("usp_SummaryLoginS");
    }


    public virtual int usp_UpdateACTIVO(Nullable<int> aCT_ID, string uSERNAME, string aCT_CODBARRASPADRE, string aCT_CODIGO1, Nullable<int> gRU_ID2, Nullable<int> gRU_ID3, string aCT_FOTO1, string aCT_FOTO2, string aCT_DOC1, string aCT_DOC2, Nullable<int> uGE_ID1, Nullable<int> uGE_ID2, Nullable<int> uGE_ID3, Nullable<int> uGE_ID4, Nullable<int> uOR_ID1, Nullable<int> uOR_ID2, Nullable<int> uOR_ID3, Nullable<int> cUS_ID1, Nullable<int> eST_ID1, Nullable<int> eST_ID2, Nullable<int> eST_ID3, Nullable<int> mAR_ID, Nullable<int> mOD_ID, string aCT_SERIE1, Nullable<int> cOL_ID, Nullable<int> eCO_ID1, Nullable<int> eCO_ID2, Nullable<int> pRO_ID, Nullable<decimal> aCT_NUMFACT, Nullable<System.DateTime> aCT_FECHACOMPRA, Nullable<int> aCT_ANIO, Nullable<decimal> aCT_VALORRESIDUALNIIF, Nullable<bool> aCT_GARANTIA, Nullable<System.DateTime> aCT_FECHAGARANTIAVENCE, string aCT_OBSERVACIONES, Nullable<decimal> aCT_VALORCOMPRA, Nullable<bool> aCT_DEPRECIADOSRI, Nullable<bool> aCT_DEPRECIADONIIF, Nullable<int> aCT_TIPRFID, string aCT_SEGURO, Nullable<int> aCT_TIPOSEGURO, string aCT_NUMPOLIZA, Nullable<int> aCT_VIGENCIAPOLIZAMESES, Nullable<System.DateTime> aCT_FECHAEMISIONPOLIZA, Nullable<System.DateTime> aCT_FECHAVENCEPOLIZA, Nullable<decimal> aCT_VALORASEGURADO, ObjectParameter err)
    {

        var aCT_IDParameter = aCT_ID.HasValue ?
            new ObjectParameter("ACT_ID", aCT_ID) :
            new ObjectParameter("ACT_ID", typeof(int));


        var uSERNAMEParameter = uSERNAME != null ?
            new ObjectParameter("USERNAME", uSERNAME) :
            new ObjectParameter("USERNAME", typeof(string));


        var aCT_CODBARRASPADREParameter = aCT_CODBARRASPADRE != null ?
            new ObjectParameter("ACT_CODBARRASPADRE", aCT_CODBARRASPADRE) :
            new ObjectParameter("ACT_CODBARRASPADRE", typeof(string));


        var aCT_CODIGO1Parameter = aCT_CODIGO1 != null ?
            new ObjectParameter("ACT_CODIGO1", aCT_CODIGO1) :
            new ObjectParameter("ACT_CODIGO1", typeof(string));


        var gRU_ID2Parameter = gRU_ID2.HasValue ?
            new ObjectParameter("GRU_ID2", gRU_ID2) :
            new ObjectParameter("GRU_ID2", typeof(int));


        var gRU_ID3Parameter = gRU_ID3.HasValue ?
            new ObjectParameter("GRU_ID3", gRU_ID3) :
            new ObjectParameter("GRU_ID3", typeof(int));


        var aCT_FOTO1Parameter = aCT_FOTO1 != null ?
            new ObjectParameter("ACT_FOTO1", aCT_FOTO1) :
            new ObjectParameter("ACT_FOTO1", typeof(string));


        var aCT_FOTO2Parameter = aCT_FOTO2 != null ?
            new ObjectParameter("ACT_FOTO2", aCT_FOTO2) :
            new ObjectParameter("ACT_FOTO2", typeof(string));


        var aCT_DOC1Parameter = aCT_DOC1 != null ?
            new ObjectParameter("ACT_DOC1", aCT_DOC1) :
            new ObjectParameter("ACT_DOC1", typeof(string));


        var aCT_DOC2Parameter = aCT_DOC2 != null ?
            new ObjectParameter("ACT_DOC2", aCT_DOC2) :
            new ObjectParameter("ACT_DOC2", typeof(string));


        var uGE_ID1Parameter = uGE_ID1.HasValue ?
            new ObjectParameter("UGE_ID1", uGE_ID1) :
            new ObjectParameter("UGE_ID1", typeof(int));


        var uGE_ID2Parameter = uGE_ID2.HasValue ?
            new ObjectParameter("UGE_ID2", uGE_ID2) :
            new ObjectParameter("UGE_ID2", typeof(int));


        var uGE_ID3Parameter = uGE_ID3.HasValue ?
            new ObjectParameter("UGE_ID3", uGE_ID3) :
            new ObjectParameter("UGE_ID3", typeof(int));


        var uGE_ID4Parameter = uGE_ID4.HasValue ?
            new ObjectParameter("UGE_ID4", uGE_ID4) :
            new ObjectParameter("UGE_ID4", typeof(int));


        var uOR_ID1Parameter = uOR_ID1.HasValue ?
            new ObjectParameter("UOR_ID1", uOR_ID1) :
            new ObjectParameter("UOR_ID1", typeof(int));


        var uOR_ID2Parameter = uOR_ID2.HasValue ?
            new ObjectParameter("UOR_ID2", uOR_ID2) :
            new ObjectParameter("UOR_ID2", typeof(int));


        var uOR_ID3Parameter = uOR_ID3.HasValue ?
            new ObjectParameter("UOR_ID3", uOR_ID3) :
            new ObjectParameter("UOR_ID3", typeof(int));


        var cUS_ID1Parameter = cUS_ID1.HasValue ?
            new ObjectParameter("CUS_ID1", cUS_ID1) :
            new ObjectParameter("CUS_ID1", typeof(int));


        var eST_ID1Parameter = eST_ID1.HasValue ?
            new ObjectParameter("EST_ID1", eST_ID1) :
            new ObjectParameter("EST_ID1", typeof(int));


        var eST_ID2Parameter = eST_ID2.HasValue ?
            new ObjectParameter("EST_ID2", eST_ID2) :
            new ObjectParameter("EST_ID2", typeof(int));


        var eST_ID3Parameter = eST_ID3.HasValue ?
            new ObjectParameter("EST_ID3", eST_ID3) :
            new ObjectParameter("EST_ID3", typeof(int));


        var mAR_IDParameter = mAR_ID.HasValue ?
            new ObjectParameter("MAR_ID", mAR_ID) :
            new ObjectParameter("MAR_ID", typeof(int));


        var mOD_IDParameter = mOD_ID.HasValue ?
            new ObjectParameter("MOD_ID", mOD_ID) :
            new ObjectParameter("MOD_ID", typeof(int));


        var aCT_SERIE1Parameter = aCT_SERIE1 != null ?
            new ObjectParameter("ACT_SERIE1", aCT_SERIE1) :
            new ObjectParameter("ACT_SERIE1", typeof(string));


        var cOL_IDParameter = cOL_ID.HasValue ?
            new ObjectParameter("COL_ID", cOL_ID) :
            new ObjectParameter("COL_ID", typeof(int));


        var eCO_ID1Parameter = eCO_ID1.HasValue ?
            new ObjectParameter("ECO_ID1", eCO_ID1) :
            new ObjectParameter("ECO_ID1", typeof(int));


        var eCO_ID2Parameter = eCO_ID2.HasValue ?
            new ObjectParameter("ECO_ID2", eCO_ID2) :
            new ObjectParameter("ECO_ID2", typeof(int));


        var pRO_IDParameter = pRO_ID.HasValue ?
            new ObjectParameter("PRO_ID", pRO_ID) :
            new ObjectParameter("PRO_ID", typeof(int));


        var aCT_NUMFACTParameter = aCT_NUMFACT.HasValue ?
            new ObjectParameter("ACT_NUMFACT", aCT_NUMFACT) :
            new ObjectParameter("ACT_NUMFACT", typeof(decimal));


        var aCT_FECHACOMPRAParameter = aCT_FECHACOMPRA.HasValue ?
            new ObjectParameter("ACT_FECHACOMPRA", aCT_FECHACOMPRA) :
            new ObjectParameter("ACT_FECHACOMPRA", typeof(System.DateTime));


        var aCT_ANIOParameter = aCT_ANIO.HasValue ?
            new ObjectParameter("ACT_ANIO", aCT_ANIO) :
            new ObjectParameter("ACT_ANIO", typeof(int));


        var aCT_VALORRESIDUALNIIFParameter = aCT_VALORRESIDUALNIIF.HasValue ?
            new ObjectParameter("ACT_VALORRESIDUALNIIF", aCT_VALORRESIDUALNIIF) :
            new ObjectParameter("ACT_VALORRESIDUALNIIF", typeof(decimal));


        var aCT_GARANTIAParameter = aCT_GARANTIA.HasValue ?
            new ObjectParameter("ACT_GARANTIA", aCT_GARANTIA) :
            new ObjectParameter("ACT_GARANTIA", typeof(bool));


        var aCT_FECHAGARANTIAVENCEParameter = aCT_FECHAGARANTIAVENCE.HasValue ?
            new ObjectParameter("ACT_FECHAGARANTIAVENCE", aCT_FECHAGARANTIAVENCE) :
            new ObjectParameter("ACT_FECHAGARANTIAVENCE", typeof(System.DateTime));


        var aCT_OBSERVACIONESParameter = aCT_OBSERVACIONES != null ?
            new ObjectParameter("ACT_OBSERVACIONES", aCT_OBSERVACIONES) :
            new ObjectParameter("ACT_OBSERVACIONES", typeof(string));


        var aCT_VALORCOMPRAParameter = aCT_VALORCOMPRA.HasValue ?
            new ObjectParameter("ACT_VALORCOMPRA", aCT_VALORCOMPRA) :
            new ObjectParameter("ACT_VALORCOMPRA", typeof(decimal));


        var aCT_DEPRECIADOSRIParameter = aCT_DEPRECIADOSRI.HasValue ?
            new ObjectParameter("ACT_DEPRECIADOSRI", aCT_DEPRECIADOSRI) :
            new ObjectParameter("ACT_DEPRECIADOSRI", typeof(bool));


        var aCT_DEPRECIADONIIFParameter = aCT_DEPRECIADONIIF.HasValue ?
            new ObjectParameter("ACT_DEPRECIADONIIF", aCT_DEPRECIADONIIF) :
            new ObjectParameter("ACT_DEPRECIADONIIF", typeof(bool));


        var aCT_TIPRFIDParameter = aCT_TIPRFID.HasValue ?
            new ObjectParameter("ACT_TIPRFID", aCT_TIPRFID) :
            new ObjectParameter("ACT_TIPRFID", typeof(int));


        var aCT_SEGUROParameter = aCT_SEGURO != null ?
            new ObjectParameter("ACT_SEGURO", aCT_SEGURO) :
            new ObjectParameter("ACT_SEGURO", typeof(string));


        var aCT_TIPOSEGUROParameter = aCT_TIPOSEGURO.HasValue ?
            new ObjectParameter("ACT_TIPOSEGURO", aCT_TIPOSEGURO) :
            new ObjectParameter("ACT_TIPOSEGURO", typeof(int));


        var aCT_NUMPOLIZAParameter = aCT_NUMPOLIZA != null ?
            new ObjectParameter("ACT_NUMPOLIZA", aCT_NUMPOLIZA) :
            new ObjectParameter("ACT_NUMPOLIZA", typeof(string));


        var aCT_VIGENCIAPOLIZAMESESParameter = aCT_VIGENCIAPOLIZAMESES.HasValue ?
            new ObjectParameter("ACT_VIGENCIAPOLIZAMESES", aCT_VIGENCIAPOLIZAMESES) :
            new ObjectParameter("ACT_VIGENCIAPOLIZAMESES", typeof(int));


        var aCT_FECHAEMISIONPOLIZAParameter = aCT_FECHAEMISIONPOLIZA.HasValue ?
            new ObjectParameter("ACT_FECHAEMISIONPOLIZA", aCT_FECHAEMISIONPOLIZA) :
            new ObjectParameter("ACT_FECHAEMISIONPOLIZA", typeof(System.DateTime));


        var aCT_FECHAVENCEPOLIZAParameter = aCT_FECHAVENCEPOLIZA.HasValue ?
            new ObjectParameter("ACT_FECHAVENCEPOLIZA", aCT_FECHAVENCEPOLIZA) :
            new ObjectParameter("ACT_FECHAVENCEPOLIZA", typeof(System.DateTime));


        var aCT_VALORASEGURADOParameter = aCT_VALORASEGURADO.HasValue ?
            new ObjectParameter("ACT_VALORASEGURADO", aCT_VALORASEGURADO) :
            new ObjectParameter("ACT_VALORASEGURADO", typeof(decimal));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateACTIVO", aCT_IDParameter, uSERNAMEParameter, aCT_CODBARRASPADREParameter, aCT_CODIGO1Parameter, gRU_ID2Parameter, gRU_ID3Parameter, aCT_FOTO1Parameter, aCT_FOTO2Parameter, aCT_DOC1Parameter, aCT_DOC2Parameter, uGE_ID1Parameter, uGE_ID2Parameter, uGE_ID3Parameter, uGE_ID4Parameter, uOR_ID1Parameter, uOR_ID2Parameter, uOR_ID3Parameter, cUS_ID1Parameter, eST_ID1Parameter, eST_ID2Parameter, eST_ID3Parameter, mAR_IDParameter, mOD_IDParameter, aCT_SERIE1Parameter, cOL_IDParameter, eCO_ID1Parameter, eCO_ID2Parameter, pRO_IDParameter, aCT_NUMFACTParameter, aCT_FECHACOMPRAParameter, aCT_ANIOParameter, aCT_VALORRESIDUALNIIFParameter, aCT_GARANTIAParameter, aCT_FECHAGARANTIAVENCEParameter, aCT_OBSERVACIONESParameter, aCT_VALORCOMPRAParameter, aCT_DEPRECIADOSRIParameter, aCT_DEPRECIADONIIFParameter, aCT_TIPRFIDParameter, aCT_SEGUROParameter, aCT_TIPOSEGUROParameter, aCT_NUMPOLIZAParameter, aCT_VIGENCIAPOLIZAMESESParameter, aCT_FECHAEMISIONPOLIZAParameter, aCT_FECHAVENCEPOLIZAParameter, aCT_VALORASEGURADOParameter, err);
    }


    public virtual int usp_UpdateACTIVOM(Nullable<int> aCT_ID, string uSERNAME, string aCT_CODBARRASPADRE, string aCT_CODIGO1, Nullable<int> gRU_ID2, Nullable<int> gRU_ID3, string aCT_FOTO1, string aCT_FOTO2, string aCT_DOC1, Nullable<int> uGE_ID1, Nullable<int> uGE_ID2, Nullable<int> uGE_ID3, Nullable<int> uGE_ID4, Nullable<int> uOR_ID1, Nullable<int> uOR_ID2, Nullable<int> uOR_ID3, Nullable<int> cUS_ID1, Nullable<int> cUS_ID2, Nullable<int> eST_ID1, Nullable<int> eST_ID2, Nullable<int> eST_ID3, Nullable<int> mAR_ID, Nullable<int> mOD_ID, string aCT_SERIE1, Nullable<int> cOL_ID, Nullable<int> eCO_ID1, Nullable<int> eCO_ID2, Nullable<int> aCT_ANIO, string aCT_OBSERVACIONES, ObjectParameter err)
    {

        var aCT_IDParameter = aCT_ID.HasValue ?
            new ObjectParameter("ACT_ID", aCT_ID) :
            new ObjectParameter("ACT_ID", typeof(int));


        var uSERNAMEParameter = uSERNAME != null ?
            new ObjectParameter("USERNAME", uSERNAME) :
            new ObjectParameter("USERNAME", typeof(string));


        var aCT_CODBARRASPADREParameter = aCT_CODBARRASPADRE != null ?
            new ObjectParameter("ACT_CODBARRASPADRE", aCT_CODBARRASPADRE) :
            new ObjectParameter("ACT_CODBARRASPADRE", typeof(string));


        var aCT_CODIGO1Parameter = aCT_CODIGO1 != null ?
            new ObjectParameter("ACT_CODIGO1", aCT_CODIGO1) :
            new ObjectParameter("ACT_CODIGO1", typeof(string));


        var gRU_ID2Parameter = gRU_ID2.HasValue ?
            new ObjectParameter("GRU_ID2", gRU_ID2) :
            new ObjectParameter("GRU_ID2", typeof(int));


        var gRU_ID3Parameter = gRU_ID3.HasValue ?
            new ObjectParameter("GRU_ID3", gRU_ID3) :
            new ObjectParameter("GRU_ID3", typeof(int));


        var aCT_FOTO1Parameter = aCT_FOTO1 != null ?
            new ObjectParameter("ACT_FOTO1", aCT_FOTO1) :
            new ObjectParameter("ACT_FOTO1", typeof(string));


        var aCT_FOTO2Parameter = aCT_FOTO2 != null ?
            new ObjectParameter("ACT_FOTO2", aCT_FOTO2) :
            new ObjectParameter("ACT_FOTO2", typeof(string));


        var aCT_DOC1Parameter = aCT_DOC1 != null ?
            new ObjectParameter("ACT_DOC1", aCT_DOC1) :
            new ObjectParameter("ACT_DOC1", typeof(string));


        var uGE_ID1Parameter = uGE_ID1.HasValue ?
            new ObjectParameter("UGE_ID1", uGE_ID1) :
            new ObjectParameter("UGE_ID1", typeof(int));


        var uGE_ID2Parameter = uGE_ID2.HasValue ?
            new ObjectParameter("UGE_ID2", uGE_ID2) :
            new ObjectParameter("UGE_ID2", typeof(int));


        var uGE_ID3Parameter = uGE_ID3.HasValue ?
            new ObjectParameter("UGE_ID3", uGE_ID3) :
            new ObjectParameter("UGE_ID3", typeof(int));


        var uGE_ID4Parameter = uGE_ID4.HasValue ?
            new ObjectParameter("UGE_ID4", uGE_ID4) :
            new ObjectParameter("UGE_ID4", typeof(int));


        var uOR_ID1Parameter = uOR_ID1.HasValue ?
            new ObjectParameter("UOR_ID1", uOR_ID1) :
            new ObjectParameter("UOR_ID1", typeof(int));


        var uOR_ID2Parameter = uOR_ID2.HasValue ?
            new ObjectParameter("UOR_ID2", uOR_ID2) :
            new ObjectParameter("UOR_ID2", typeof(int));


        var uOR_ID3Parameter = uOR_ID3.HasValue ?
            new ObjectParameter("UOR_ID3", uOR_ID3) :
            new ObjectParameter("UOR_ID3", typeof(int));


        var cUS_ID1Parameter = cUS_ID1.HasValue ?
            new ObjectParameter("CUS_ID1", cUS_ID1) :
            new ObjectParameter("CUS_ID1", typeof(int));


        var cUS_ID2Parameter = cUS_ID2.HasValue ?
            new ObjectParameter("CUS_ID2", cUS_ID2) :
            new ObjectParameter("CUS_ID2", typeof(int));


        var eST_ID1Parameter = eST_ID1.HasValue ?
            new ObjectParameter("EST_ID1", eST_ID1) :
            new ObjectParameter("EST_ID1", typeof(int));


        var eST_ID2Parameter = eST_ID2.HasValue ?
            new ObjectParameter("EST_ID2", eST_ID2) :
            new ObjectParameter("EST_ID2", typeof(int));


        var eST_ID3Parameter = eST_ID3.HasValue ?
            new ObjectParameter("EST_ID3", eST_ID3) :
            new ObjectParameter("EST_ID3", typeof(int));


        var mAR_IDParameter = mAR_ID.HasValue ?
            new ObjectParameter("MAR_ID", mAR_ID) :
            new ObjectParameter("MAR_ID", typeof(int));


        var mOD_IDParameter = mOD_ID.HasValue ?
            new ObjectParameter("MOD_ID", mOD_ID) :
            new ObjectParameter("MOD_ID", typeof(int));


        var aCT_SERIE1Parameter = aCT_SERIE1 != null ?
            new ObjectParameter("ACT_SERIE1", aCT_SERIE1) :
            new ObjectParameter("ACT_SERIE1", typeof(string));


        var cOL_IDParameter = cOL_ID.HasValue ?
            new ObjectParameter("COL_ID", cOL_ID) :
            new ObjectParameter("COL_ID", typeof(int));


        var eCO_ID1Parameter = eCO_ID1.HasValue ?
            new ObjectParameter("ECO_ID1", eCO_ID1) :
            new ObjectParameter("ECO_ID1", typeof(int));


        var eCO_ID2Parameter = eCO_ID2.HasValue ?
            new ObjectParameter("ECO_ID2", eCO_ID2) :
            new ObjectParameter("ECO_ID2", typeof(int));


        var aCT_ANIOParameter = aCT_ANIO.HasValue ?
            new ObjectParameter("ACT_ANIO", aCT_ANIO) :
            new ObjectParameter("ACT_ANIO", typeof(int));


        var aCT_OBSERVACIONESParameter = aCT_OBSERVACIONES != null ?
            new ObjectParameter("ACT_OBSERVACIONES", aCT_OBSERVACIONES) :
            new ObjectParameter("ACT_OBSERVACIONES", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateACTIVOM", aCT_IDParameter, uSERNAMEParameter, aCT_CODBARRASPADREParameter, aCT_CODIGO1Parameter, gRU_ID2Parameter, gRU_ID3Parameter, aCT_FOTO1Parameter, aCT_FOTO2Parameter, aCT_DOC1Parameter, uGE_ID1Parameter, uGE_ID2Parameter, uGE_ID3Parameter, uGE_ID4Parameter, uOR_ID1Parameter, uOR_ID2Parameter, uOR_ID3Parameter, cUS_ID1Parameter, cUS_ID2Parameter, eST_ID1Parameter, eST_ID2Parameter, eST_ID3Parameter, mAR_IDParameter, mOD_IDParameter, aCT_SERIE1Parameter, cOL_IDParameter, eCO_ID1Parameter, eCO_ID2Parameter, aCT_ANIOParameter, aCT_OBSERVACIONESParameter, err);
    }

}

