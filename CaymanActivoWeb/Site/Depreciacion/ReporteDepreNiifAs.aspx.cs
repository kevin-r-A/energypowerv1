using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Configuration;
using System.Data;
using System.IO;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Web.Services;
using Telerik.Web.UI;
using System.Globalization;
using System.Web.Security;
using System.Drawing;
using System.Web.UI.HtmlControls;
using iTextSharp;
using iTextSharp.text.pdf;
using Telerik.Web.UI.GridExcelBuilder;

public partial class ReporteDepreNiifAs : System.Web.UI.Page
{

    protected void Page_Load(object sender, EventArgs e)
    {
        try
        {
            if ((string)(Session["emid"]) == null)
            {
                Session.Abandon();
                FormsAuthentication.SignOut();
                FormsAuthentication.RedirectToLoginPage();
            }
        }
        catch
        {
            Session.Abandon();
            FormsAuthentication.SignOut();
            FormsAuthentication.RedirectToLoginPage();
        }

        if (!IsPostBack)
        {            
            this.Title = ConfigurationManager.AppSettings["Titulo"] + " Consultar Depreciación NIIF Generada";
            cargarmeses();
        }
    }

    private string mesLastDepre(DateTime nextDepre)
    {
        string mes = "";

        if (nextDepre.Month == 1)
            mes = "ENERO " + nextDepre.Year;
        else if (nextDepre.Month == 2)
            mes = "FEBRERO " + nextDepre.Year;
        else if (nextDepre.Month == 3)
            mes = "MARZO " + nextDepre.Year;
        else if (nextDepre.Month == 4)
            mes = "ABRIL " + nextDepre.Year;
        else if (nextDepre.Month == 5)
            mes = "MAYO " + nextDepre.Year;
        else if (nextDepre.Month == 6)
            mes = "JUNIO " + nextDepre.Year;
        else if (nextDepre.Month == 7)
            mes = "JULIO " + nextDepre.Year;
        else if (nextDepre.Month == 8)
            mes = "AGOSTO " + nextDepre.Year;
        else if (nextDepre.Month == 9)
            mes = "SEPTIEMBRE " + nextDepre.Year;
        else if (nextDepre.Month == 10)
            mes = "OCTUBRE " + nextDepre.Year;
        else if (nextDepre.Month == 11)
            mes = "NOVIEMBRE " + nextDepre.Year;
        else if (nextDepre.Month == 12)
            mes = "DICIEMBRE " + nextDepre.Year;

        return mes;
    }

    private void cargarmeses()
    {
        ddmeses.Items.Clear();
        DataTable dt = Logica.HELPER.getMesDepre2("NIIF");

        int i = 0;
        foreach (DataRow row in dt.Rows)
        {

            DateTime dtime = Convert.ToDateTime(row[0].ToString());
            ListItem li = new ListItem(mesLastDepre(dtime), dtime.ToShortDateString());
            if (i !=0)
            {
                ddmeses.Items.Add(li);
            }
            i++;
        }
    }

    protected void btnExcel_Click(object sender, EventArgs e)
    {
        rgdepre.ExportSettings.FileName = "NIIF_"+ddmeses.SelectedItem.Text.Replace(" ","");

        foreach (GridItem commandItem in this.rgdepre.MasterTableView.GetItems(GridItemType.CommandItem))
        {
            commandItem.Visible = false;
        }

        rgdepre.MasterTableView.ExportToExcel();    
    }
    protected void ddmeses_SelectedIndexChanged(object sender, EventArgs e)
    {
        rgdepre.DataBind();
    }

    int _currentGroup = 0;
    protected void rgdepre_ExcelMLExportRowCreated(object sender, Telerik.Web.UI.GridExcelBuilder.GridExportExcelMLRowCreatedArgs e)
    {
        if (e.RowType == GridExportExcelMLRowType.GroupByHeaderRow)
        {
            int rowIndex = e.Worksheet.Table.Rows.IndexOf(e.Row);
            if (rowIndex != 0)
            {
                RowElement row = new RowElement();
                CellElement cell;
                GridGroupFooterItem item = rgdepre.MasterTableView.GetItems(GridItemType.GroupFooter)[_currentGroup] as GridGroupFooterItem;

                foreach (GridColumn column in rgdepre.MasterTableView.AutoGeneratedColumns)
                {
                    cell = new CellElement();
                    cell.Data.DataItem = item[column.UniqueName].Text.Replace("&nbsp;", "");
                    row.Cells.Add(cell);
                }

                e.Worksheet.Table.Rows.Insert(rowIndex, row);
            }

            _currentGroup++;
        }
    
    }
}
